{"ast":null,"code":"import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Input, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, ContentChildren, Output, ContentChild, ViewChild, inject, QueryList, forwardRef, Self, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, mixinErrorState, MatCommonModule, MatRippleModule, ErrorStateMatcher } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i1$1 from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i1$2 from '@angular/material/form-field';\nimport { MatFormFieldControl, MAT_FORM_FIELD } from '@angular/material/form-field';\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n/** Injection token to be used to override the default options for the chips module. */\nfunction MatChip_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChip_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = [\"*\", [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c1 = [\"*\", \"mat-chip-avatar, [matChipAvatar]\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChipOption_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementStart(2, \"span\", 10);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 11);\n    i0.ɵɵelement(4, \"path\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MatChipOption_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c2 = \".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\";\nfunction MatChipRow_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 9)(2, \"span\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRippleDisabled\", ctx_r0._isRippleDisabled())(\"matRippleCentered\", ctx_r0._isRippleCentered)(\"matRippleTrigger\", ctx_r0._elementRef.nativeElement);\n  }\n}\nfunction MatChipRow_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipRow_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction MatChipRow_ng_container_6_ng_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2, [\"*ngIf\", \"contentEditInput; else defaultMatChipEditInput\"]);\n  }\n}\nfunction MatChipRow_ng_container_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n}\nfunction MatChipRow_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MatChipRow_ng_container_6_ng_content_1_Template, 1, 0, \"ng-content\", 12);\n    i0.ɵɵtemplate(2, MatChipRow_ng_container_6_ng_template_2_Template, 1, 0, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r6 = i0.ɵɵreference(3);\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.contentEditInput)(\"ngIfElse\", _r6);\n  }\n}\nfunction MatChipRow_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵprojection(1, 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c3 = [[[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], \"*\", [[\"\", \"matChipEditInput\", \"\"]], [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c4 = [\"mat-chip-avatar, [matChipAvatar]\", \"*\", \"[matChipEditInput]\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nconst _c5 = [\"*\"];\nconst _c6 = \".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\";\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n/**\r\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\r\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\r\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\r\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\r\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\r\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\r\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\r\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\nclass _MatChipActionBase {}\nconst _MatChipActionMixinBase = mixinTabIndex(_MatChipActionBase, -1);\n/**\r\n * Section within a chip.\r\n * @docs-private\r\n */\nclass MatChipAction extends _MatChipActionMixinBase {\n  /** Whether the action is disabled. */\n  get disabled() {\n    return this._disabled || this._parentChip.disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  /**\r\n   * Determine the value of the disabled attribute for this chip action.\r\n   */\n  _getDisabledAttribute() {\n    // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n    // string to indicate that disabled attribute should be included.\n    return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n  }\n  /**\r\n   * Determine the value of the tabindex attribute for this chip action.\r\n   */\n  _getTabindex() {\n    return this.disabled && !this._allowFocusWhenDisabled || !this.isInteractive ? null : this.tabIndex.toString();\n  }\n  constructor(_elementRef, _parentChip) {\n    super();\n    this._elementRef = _elementRef;\n    this._parentChip = _parentChip;\n    /** Whether the action is interactive. */\n    this.isInteractive = true;\n    /** Whether this is the primary action in the chip. */\n    this._isPrimary = true;\n    this._disabled = false;\n    /**\r\n     * Private API to allow focusing this chip when it is disabled.\r\n     */\n    this._allowFocusWhenDisabled = false;\n    if (_elementRef.nativeElement.nodeName === 'BUTTON') {\n      _elementRef.nativeElement.setAttribute('type', 'button');\n    }\n  }\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n  _handleClick(event) {\n    if (!this.disabled && this.isInteractive && this._isPrimary) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled && this.isInteractive && this._isPrimary && !this._parentChip._isEditing) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n}\nMatChipAction.ɵfac = function MatChipAction_Factory(t) {\n  return new (t || MatChipAction)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_CHIP));\n};\nMatChipAction.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatChipAction,\n  selectors: [[\"\", \"matChipAction\", \"\"]],\n  hostAttrs: [1, \"mdc-evolution-chip__action\", \"mat-mdc-chip-action\"],\n  hostVars: 9,\n  hostBindings: function MatChipAction_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function MatChipAction_click_HostBindingHandler($event) {\n        return ctx._handleClick($event);\n      })(\"keydown\", function MatChipAction_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx._getTabindex())(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx.disabled);\n      i0.ɵɵclassProp(\"mdc-evolution-chip__action--primary\", ctx._isPrimary)(\"mdc-evolution-chip__action--presentational\", !ctx.isInteractive)(\"mdc-evolution-chip__action--trailing\", !ctx._isPrimary);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    tabIndex: \"tabIndex\",\n    isInteractive: \"isInteractive\",\n    _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAction, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipAction]',\n      inputs: ['disabled', 'tabIndex'],\n      host: {\n        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary',\n        '[attr.tabindex]': '_getTabindex()',\n        '[attr.disabled]': '_getDisabledAttribute()',\n        '[attr.aria-disabled]': 'disabled',\n        '(click)': '_handleClick($event)',\n        '(keydown)': '_handleKeydown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_CHIP]\n      }]\n    }];\n  }, {\n    isInteractive: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    _allowFocusWhenDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n/** Avatar image within a chip. */\nclass MatChipAvatar {}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) {\n  return new (t || MatChipAvatar)();\n};\nMatChipAvatar.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatChipAvatar,\n  selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]],\n  hostAttrs: [\"role\", \"img\", 1, \"mat-mdc-chip-avatar\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--primary\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_CHIP_AVATAR,\n    useExisting: MatChipAvatar\n  }])]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAvatar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-avatar, [matChipAvatar]',\n      host: {\n        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n        'role': 'img'\n      },\n      providers: [{\n        provide: MAT_CHIP_AVATAR,\n        useExisting: MatChipAvatar\n      }]\n    }]\n  }], null, null);\n})();\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * MDC considers all trailing actions as a remove icon,\r\n     * but we support non-interactive trailing icons.\r\n     */\n    this.isInteractive = false;\n    this._isPrimary = false;\n  }\n}\nMatChipTrailingIcon.ɵfac = /* @__PURE__ */function () {\n  let ɵMatChipTrailingIcon_BaseFactory;\n  return function MatChipTrailingIcon_Factory(t) {\n    return (ɵMatChipTrailingIcon_BaseFactory || (ɵMatChipTrailingIcon_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipTrailingIcon)))(t || MatChipTrailingIcon);\n  };\n}();\nMatChipTrailingIcon.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatChipTrailingIcon,\n  selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]],\n  hostAttrs: [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-trailing-icon\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_CHIP_TRAILING_ICON,\n    useExisting: MatChipTrailingIcon\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n      host: {\n        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'aria-hidden': 'true'\n      },\n      providers: [{\n        provide: MAT_CHIP_TRAILING_ICON,\n        useExisting: MatChipTrailingIcon\n      }]\n    }]\n  }], null, null);\n})();\n/**\r\n * Directive to remove the parent chip when the trailing icon is clicked or\r\n * when the ENTER key is pressed on it.\r\n *\r\n * Recommended for use with the Material Design \"cancel\" icon\r\n * available at https://material.io/icons/#ic_cancel.\r\n *\r\n * Example:\r\n *\r\n * ```\r\n * <mat-chip>\r\n *   <mat-icon matChipRemove>cancel</mat-icon>\r\n * </mat-chip>\r\n * ```\r\n */\nclass MatChipRemove extends MatChipAction {\n  constructor() {\n    super(...arguments);\n    this._isPrimary = false;\n  }\n  _handleClick(event) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n}\nMatChipRemove.ɵfac = /* @__PURE__ */function () {\n  let ɵMatChipRemove_BaseFactory;\n  return function MatChipRemove_Factory(t) {\n    return (ɵMatChipRemove_BaseFactory || (ɵMatChipRemove_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipRemove)))(t || MatChipRemove);\n  };\n}();\nMatChipRemove.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatChipRemove,\n  selectors: [[\"\", \"matChipRemove\", \"\"]],\n  hostAttrs: [\"role\", \"button\", 1, \"mat-mdc-chip-remove\", \"mat-mdc-chip-trailing-icon\", \"mat-mdc-focus-indicator\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n  hostVars: 1,\n  hostBindings: function MatChipRemove_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-hidden\", null);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_CHIP_REMOVE,\n    useExisting: MatChipRemove\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRemove, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipRemove]',\n      host: {\n        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator ' + 'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'role': 'button',\n        '[attr.aria-hidden]': 'null'\n      },\n      providers: [{\n        provide: MAT_CHIP_REMOVE,\n        useExisting: MatChipRemove\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\nlet uid = 0;\n/**\r\n * Boilerplate for applying mixins to MatChip.\r\n * @docs-private\r\n */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n})), 'primary'), -1);\n/**\r\n * Material design styled Chip base component. Used inside the MatChipSet component.\r\n *\r\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\r\n */\nclass MatChip extends _MatChipMixinBase {\n  _hasFocus() {\n    return this._hasFocusInternal;\n  }\n  /**\r\n   * The value of the chip. Defaults to the content inside\r\n   * the `mat-mdc-chip-action-label` element.\r\n   */\n  get value() {\n    return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n  }\n  set value(value) {\n    this._value = value;\n  }\n  /**\r\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\r\n   */\n  get removable() {\n    return this._removable;\n  }\n  set removable(value) {\n    this._removable = coerceBooleanProperty(value);\n  }\n  /**\r\n   * Colors the chip for emphasis as if it were selected.\r\n   */\n  get highlighted() {\n    return this._highlighted;\n  }\n  set highlighted(value) {\n    this._highlighted = coerceBooleanProperty(value);\n  }\n  constructor(_changeDetectorRef, elementRef, _ngZone, _focusMonitor, _document, animationMode, _globalRippleOptions, tabIndex) {\n    super(elementRef);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._ngZone = _ngZone;\n    this._focusMonitor = _focusMonitor;\n    this._globalRippleOptions = _globalRippleOptions;\n    /** Whether the ripple is centered on the chip. */\n    this._isRippleCentered = false;\n    /** Emits when the chip is focused. */\n    this._onFocus = new Subject();\n    /** Emits when the chip is blurred. */\n    this._onBlur = new Subject();\n    /** Role for the root of the chip. */\n    this.role = null;\n    /** Whether the chip has focus. */\n    this._hasFocusInternal = false;\n    /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n    this.id = `mat-mdc-chip-${uid++}`;\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA label for the content of the chip. */\n    this.ariaLabel = null;\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA description for the content of the chip. */\n    this.ariaDescription = null;\n    /** Id of a span that contains this chip's aria description. */\n    this._ariaDescriptionId = `${this.id}-aria-description`;\n    this._removable = true;\n    this._highlighted = false;\n    /** Emitted when a chip is to be removed. */\n    this.removed = new EventEmitter();\n    /** Emitted when the chip is destroyed. */\n    this.destroyed = new EventEmitter();\n    /** The unstyled chip selector for this component. */\n    this.basicChipAttrName = 'mat-basic-chip';\n    this._document = _document;\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n    if (tabIndex != null) {\n      this.tabIndex = parseInt(tabIndex) ?? this.defaultTabIndex;\n    }\n    this._monitorFocus();\n  }\n  ngOnInit() {\n    // This check needs to happen in `ngOnInit` so the overridden value of\n    // `basicChipAttrName` coming from base classes can be picked up.\n    const element = this._elementRef.nativeElement;\n    this._isBasicChip = element.hasAttribute(this.basicChipAttrName) || element.tagName.toLowerCase() === this.basicChipAttrName;\n  }\n  ngAfterViewInit() {\n    this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n    if (this._pendingFocus) {\n      this._pendingFocus = false;\n      this.focus();\n    }\n  }\n  ngAfterContentInit() {\n    // Since the styling depends on the presence of some\n    // actions, we have to mark for check on changes.\n    this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._actionChanges?.unsubscribe();\n    this.destroyed.emit({\n      chip: this\n    });\n    this.destroyed.complete();\n  }\n  /**\r\n   * Allows for programmatic removal of the chip.\r\n   *\r\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\r\n   */\n  remove() {\n    if (this.removable) {\n      this.removed.emit({\n        chip: this\n      });\n    }\n  }\n  /** Whether or not the ripple should be disabled. */\n  _isRippleDisabled() {\n    return this.disabled || this.disableRipple || this._animationsDisabled || this._isBasicChip || !!this._globalRippleOptions?.disabled;\n  }\n  /** Returns whether the chip has a trailing icon. */\n  _hasTrailingIcon() {\n    return !!(this.trailingIcon || this.removeIcon);\n  }\n  /** Handles keyboard events on the chip. */\n  _handleKeydown(event) {\n    if (event.keyCode === BACKSPACE || event.keyCode === DELETE) {\n      event.preventDefault();\n      this.remove();\n    }\n  }\n  /** Allows for programmatic focusing of the chip. */\n  focus() {\n    if (!this.disabled) {\n      // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n      // This can happen if the consumer tries to focus a chip immediately after it is added.\n      // Queue the method to be called again on init.\n      if (this.primaryAction) {\n        this.primaryAction.focus();\n      } else {\n        this._pendingFocus = true;\n      }\n    }\n  }\n  /** Gets the action that contains a specific target node. */\n  _getSourceAction(target) {\n    return this._getActions().find(action => {\n      const element = action._elementRef.nativeElement;\n      return element === target || element.contains(target);\n    });\n  }\n  /** Gets all of the actions within the chip. */\n  _getActions() {\n    const result = [];\n    if (this.primaryAction) {\n      result.push(this.primaryAction);\n    }\n    if (this.removeIcon) {\n      result.push(this.removeIcon);\n    }\n    if (this.trailingIcon) {\n      result.push(this.trailingIcon);\n    }\n    return result;\n  }\n  /** Handles interactions with the primary action of the chip. */\n  _handlePrimaryActionInteraction() {\n    // Empty here, but is overwritten in child classes.\n  }\n  /** Starts the focus monitoring process on the chip. */\n  _monitorFocus() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      const hasFocus = origin !== null;\n      if (hasFocus !== this._hasFocusInternal) {\n        this._hasFocusInternal = hasFocus;\n        if (hasFocus) {\n          this._onFocus.next({\n            chip: this\n          });\n        } else {\n          // When animations are enabled, Angular may end up removing the chip from the DOM a little\n          // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n          // that moves focus not the next item. To work around the issue, we defer marking the chip\n          // as not focused until the next time the zone stabilizes.\n          this._ngZone.onStable.pipe(take(1)).subscribe(() => this._ngZone.run(() => this._onBlur.next({\n            chip: this\n          })));\n        }\n      }\n    });\n  }\n}\nMatChip.ɵfac = function MatChip_Factory(t) {\n  return new (t || MatChip)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'));\n};\nMatChip.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatChip,\n  selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]],\n  contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.leadingIcon = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allLeadingIcons = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTrailingIcons = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allRemoveIcons = _t);\n    }\n  },\n  viewQuery: function MatChip_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatRipple, 5);\n      i0.ɵɵviewQuery(MatChipAction, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.primaryAction = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-mdc-chip\"],\n  hostVars: 30,\n  hostBindings: function MatChip_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function MatChip_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.role ? ctx.tabIndex : null)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-basic-chip\", ctx._isBasicChip)(\"mat-mdc-standard-chip\", !ctx._isBasicChip)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon())(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\",\n    role: \"role\",\n    id: \"id\",\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaDescription: [\"aria-description\", \"ariaDescription\"],\n    value: \"value\",\n    removable: \"removable\",\n    highlighted: \"highlighted\"\n  },\n  outputs: {\n    removed: \"removed\",\n    destroyed: \"destroyed\"\n  },\n  exportAs: [\"matChip\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_CHIP,\n    useExisting: MatChip\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 9,\n  vars: 6,\n  consts: [[\"matRipple\", \"\", 1, \"mat-mdc-chip-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", 3, \"isInteractive\"], [\"class\", \"mdc-evolution-chip__graphic mat-mdc-chip-graphic\", 4, \"ngIf\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [\"class\", \"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\", 4, \"ngIf\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n  template: function MatChip_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵelement(0, \"span\", 0)(1, \"span\", 1);\n      i0.ɵɵelementStart(2, \"span\", 2)(3, \"span\", 3);\n      i0.ɵɵtemplate(4, MatChip_span_4_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementStart(5, \"span\", 5);\n      i0.ɵɵprojection(6);\n      i0.ɵɵelement(7, \"span\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(8, MatChip_span_8_Template, 2, 0, \"span\", 7);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx._isRippleCentered)(\"matRippleTrigger\", ctx._elementRef.nativeElement);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"isInteractive\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.leadingIcon);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx._hasTrailingIcon());\n    }\n  },\n  dependencies: [i2.NgIf, i3.MatRipple, MatChipAction],\n  styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChip, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]',\n      inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n      exportAs: 'matChip',\n      host: {\n        'class': 'mat-mdc-chip',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[class._mat-animation-noopable]': '_animationsDisabled',\n        '[id]': 'id',\n        '[attr.role]': 'role',\n        '[attr.tabindex]': 'role ? tabIndex : null',\n        '[attr.aria-label]': 'ariaLabel',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_CHIP,\n        useExisting: MatChip\n      }],\n      template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, {\n    role: [{\n      type: Input\n    }],\n    _allLeadingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_AVATAR, {\n        descendants: true\n      }]\n    }],\n    _allTrailingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_TRAILING_ICON, {\n        descendants: true\n      }]\n    }],\n    _allRemoveIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_REMOVE, {\n        descendants: true\n      }]\n    }],\n    id: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaDescription: [{\n      type: Input,\n      args: ['aria-description']\n    }],\n    value: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input\n    }],\n    highlighted: [{\n      type: Input\n    }],\n    removed: [{\n      type: Output\n    }],\n    destroyed: [{\n      type: Output\n    }],\n    leadingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_AVATAR]\n    }],\n    trailingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_TRAILING_ICON]\n    }],\n    removeIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_REMOVE]\n    }],\n    ripple: [{\n      type: ViewChild,\n      args: [MatRipple]\n    }],\n    primaryAction: [{\n      type: ViewChild,\n      args: [MatChipAction]\n    }]\n  });\n})();\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n  constructor( /** Reference to the chip that emitted the event. */\n  source, /** Whether the chip that emitted the event is selected. */\n  selected, /** Whether the selection change was a result of a user interaction. */\n  isUserInput = false) {\n    this.source = source;\n    this.selected = selected;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\r\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\r\n *\r\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\r\n * user cannot click disabled chips.\r\n */\nclass MatChipOption extends MatChip {\n  constructor() {\n    super(...arguments);\n    /** Default chip options. */\n    this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    /** Whether the chip list is selectable. */\n    this.chipListSelectable = true;\n    /** Whether the chip list is in multi-selection mode. */\n    this._chipListMultiple = false;\n    /** Whether the chip list hides single-selection indicator. */\n    this._chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    this._selectable = true;\n    this._selected = false;\n    /** The unstyled chip selector for this component. */\n    this.basicChipAttrName = 'mat-basic-chip-option';\n    /** Emitted when the chip is selected or deselected. */\n    this.selectionChange = new EventEmitter();\n  }\n  /**\r\n   * Whether or not the chip is selectable.\r\n   *\r\n   * When a chip is not selectable, changes to its selected state are always\r\n   * ignored. By default an option chip is selectable, and it becomes\r\n   * non-selectable if its parent chip list is not selectable.\r\n   */\n  get selectable() {\n    return this._selectable && this.chipListSelectable;\n  }\n  set selectable(value) {\n    this._selectable = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Whether the chip is selected. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    this._setSelectedState(coerceBooleanProperty(value), false, true);\n  }\n  /**\r\n   * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\r\n   * interaction patterns.\r\n   *\r\n   * From [WAI ARIA Listbox authoring practices guide](\r\n   * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\r\n   *  \"If any options are selected, each selected option has either aria-selected or aria-checked\r\n   *  set to true. All options that are selectable but not selected have either aria-selected or\r\n   *  aria-checked set to false.\"\r\n   *\r\n   * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\r\n   * VoiceOver reading every option as \"selected\" (#25736).\r\n   */\n  get ariaSelected() {\n    return this.selectable ? this.selected.toString() : null;\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.role = 'presentation';\n  }\n  /** Selects the chip. */\n  select() {\n    this._setSelectedState(true, false, true);\n  }\n  /** Deselects the chip. */\n  deselect() {\n    this._setSelectedState(false, false, true);\n  }\n  /** Selects this chip and emits userInputSelection event */\n  selectViaInteraction() {\n    this._setSelectedState(true, true, true);\n  }\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput = false) {\n    this._setSelectedState(!this.selected, isUserInput, true);\n    return this.selected;\n  }\n  _handlePrimaryActionInteraction() {\n    if (this.selectable && !this.disabled) {\n      this.toggleSelected(true);\n    }\n  }\n  _hasLeadingGraphic() {\n    if (this.leadingIcon) {\n      return true;\n    }\n    // The checkmark graphic communicates selected state for both single-select and multi-select.\n    // Include checkmark in single-select to fix a11y issue where selected state is communicated\n    // visually only using color (#25886).\n    return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n  }\n  _setSelectedState(isSelected, isUserInput, emitEvent) {\n    if (isSelected !== this.selected) {\n      this._selected = isSelected;\n      if (emitEvent) {\n        this.selectionChange.emit({\n          source: this,\n          isUserInput,\n          selected: this.selected\n        });\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n}\nMatChipOption.ɵfac = /* @__PURE__ */function () {\n  let ɵMatChipOption_BaseFactory;\n  return function MatChipOption_Factory(t) {\n    return (ɵMatChipOption_BaseFactory || (ɵMatChipOption_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipOption)))(t || MatChipOption);\n  };\n}();\nMatChipOption.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatChipOption,\n  selectors: [[\"mat-basic-chip-option\"], [\"\", \"mat-basic-chip-option\", \"\"], [\"mat-chip-option\"], [\"\", \"mat-chip-option\", \"\"]],\n  hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-option\"],\n  hostVars: 37,\n  hostBindings: function MatChipOption_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n      i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--filter\", !ctx._isBasicChip)(\"mdc-evolution-chip--selectable\", !ctx._isBasicChip)(\"mat-mdc-chip-selected\", ctx.selected)(\"mat-mdc-chip-multiple\", ctx._chipListMultiple)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--selected\", ctx.selected)(\"mdc-evolution-chip--selecting\", !ctx._animationsDisabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-graphic\", ctx._hasLeadingGraphic())(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\",\n    selectable: \"selectable\",\n    selected: \"selected\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MatChip,\n    useExisting: MatChipOption\n  }, {\n    provide: MAT_CHIP,\n    useExisting: MatChipOption\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 11,\n  vars: 12,\n  consts: [[\"matRipple\", \"\", 1, \"mat-mdc-chip-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", \"role\", \"option\", 3, \"tabIndex\", \"_allowFocusWhenDisabled\"], [\"class\", \"mdc-evolution-chip__graphic mat-mdc-chip-graphic\", 4, \"ngIf\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [\"class\", \"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\", 4, \"ngIf\"], [1, \"cdk-visually-hidden\", 3, \"id\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__checkmark\"], [\"viewBox\", \"-2 -3 30 30\", \"focusable\", \"false\", 1, \"mdc-evolution-chip__checkmark-svg\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-evolution-chip__checkmark-path\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n  template: function MatChipOption_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵelement(0, \"span\", 0)(1, \"span\", 1);\n      i0.ɵɵelementStart(2, \"span\", 2)(3, \"button\", 3);\n      i0.ɵɵtemplate(4, MatChipOption_span_4_Template, 5, 0, \"span\", 4);\n      i0.ɵɵelementStart(5, \"span\", 5);\n      i0.ɵɵprojection(6);\n      i0.ɵɵelement(7, \"span\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(8, MatChipOption_span_8_Template, 2, 0, \"span\", 7);\n      i0.ɵɵelementStart(9, \"span\", 8);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx._isRippleCentered)(\"matRippleTrigger\", ctx._elementRef.nativeElement);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"tabIndex\", ctx.tabIndex)(\"_allowFocusWhenDisabled\", true);\n      i0.ɵɵattribute(\"aria-selected\", ctx.ariaSelected)(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx._ariaDescriptionId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx._hasLeadingGraphic());\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx._hasTrailingIcon());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"id\", ctx._ariaDescriptionId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.ariaDescription);\n    }\n  },\n  dependencies: [i2.NgIf, i3.MatRipple, MatChipAction],\n  styles: [_c2],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]',\n      inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-option',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\n        '[class.mat-mdc-chip-selected]': 'selected',\n        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--selected]': 'selected',\n        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n        // starts and removes it once the animation is finished. We don't need to go through all\n        // the trouble, because we only care about the selection animation. MDC needs to do it,\n        // because they also have an exit animation that we don't care about.\n        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '[id]': 'id'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipOption\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipOption\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"_hasLeadingGraphic()\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n        <svg class=\\\"mdc-evolution-chip__checkmark-svg\\\" viewBox=\\\"-2 -3 30 30\\\" focusable=\\\"false\\\">\\n          <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n        </svg>\\n      </span>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], null, {\n    selectable: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n/**\r\n * A directive that makes a span editable and exposes functions to modify and retrieve the\r\n * element's contents.\r\n */\nclass MatChipEditInput {\n  constructor(_elementRef, _document) {\n    this._elementRef = _elementRef;\n    this._document = _document;\n  }\n  initialize(initialValue) {\n    this.getNativeElement().focus();\n    this.setValue(initialValue);\n  }\n  getNativeElement() {\n    return this._elementRef.nativeElement;\n  }\n  setValue(value) {\n    this.getNativeElement().textContent = value;\n    this._moveCursorToEndOfInput();\n  }\n  getValue() {\n    return this.getNativeElement().textContent || '';\n  }\n  _moveCursorToEndOfInput() {\n    const range = this._document.createRange();\n    range.selectNodeContents(this.getNativeElement());\n    range.collapse(false);\n    const sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n}\nMatChipEditInput.ɵfac = function MatChipEditInput_Factory(t) {\n  return new (t || MatChipEditInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n};\nMatChipEditInput.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatChipEditInput,\n  selectors: [[\"span\", \"matChipEditInput\", \"\"]],\n  hostAttrs: [\"role\", \"textbox\", \"tabindex\", \"-1\", \"contenteditable\", \"true\", 1, \"mat-chip-edit-input\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipEditInput, [{\n    type: Directive,\n    args: [{\n      selector: 'span[matChipEditInput]',\n      host: {\n        'class': 'mat-chip-edit-input',\n        'role': 'textbox',\n        'tabindex': '-1',\n        'contenteditable': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n/**\r\n * An extension of the MatChip component used with MatChipGrid and\r\n * the matChipInputFor directive.\r\n */\nclass MatChipRow extends MatChip {\n  constructor(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex) {\n    super(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex);\n    this.basicChipAttrName = 'mat-basic-chip-row';\n    /**\r\n     * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\r\n     * event might occur which will interrupt the editing. This flag is used to avoid interruptions\r\n     * while the editing action is being initialized.\r\n     */\n    this._editStartPending = false;\n    this.editable = false;\n    /** Emitted when the chip is edited. */\n    this.edited = new EventEmitter();\n    this._isEditing = false;\n    this.role = 'row';\n    this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      if (this._isEditing && !this._editStartPending) {\n        this._onEditFinish();\n      }\n    });\n  }\n  _hasTrailingIcon() {\n    // The trailing icon is hidden while editing.\n    return !this._isEditing && super._hasTrailingIcon();\n  }\n  /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n  _handleFocus() {\n    if (!this._isEditing && !this.disabled) {\n      this.focus();\n    }\n  }\n  _handleKeydown(event) {\n    if (event.keyCode === ENTER && !this.disabled) {\n      if (this._isEditing) {\n        event.preventDefault();\n        this._onEditFinish();\n      } else if (this.editable) {\n        this._startEditing(event);\n      }\n    } else if (this._isEditing) {\n      // Stop the event from reaching the chip set in order to avoid navigating.\n      event.stopPropagation();\n    } else {\n      super._handleKeydown(event);\n    }\n  }\n  _handleDoubleclick(event) {\n    if (!this.disabled && this.editable) {\n      this._startEditing(event);\n    }\n  }\n  _startEditing(event) {\n    if (!this.primaryAction || this.removeIcon && this._getSourceAction(event.target) === this.removeIcon) {\n      return;\n    }\n    // The value depends on the DOM so we need to extract it before we flip the flag.\n    const value = this.value;\n    this._isEditing = true;\n    this._editStartPending = true;\n    // Defer initializing the input so it has time to be added to the DOM.\n    setTimeout(() => {\n      this._getEditInput().initialize(value);\n      this._editStartPending = false;\n    });\n  }\n  _onEditFinish() {\n    this._isEditing = false;\n    this._editStartPending = false;\n    this.edited.emit({\n      chip: this,\n      value: this._getEditInput().getValue()\n    });\n    // If the edit input is still focused or focus was returned to the body after it was destroyed,\n    // return focus to the chip contents.\n    if (this._document.activeElement === this._getEditInput().getNativeElement() || this._document.activeElement === this._document.body) {\n      this.primaryAction.focus();\n    }\n  }\n  /**\r\n   * Gets the projected chip edit input, or the default input if none is projected in. One of these\r\n   * two values is guaranteed to be defined.\r\n   */\n  _getEditInput() {\n    return this.contentEditInput || this.defaultEditInput;\n  }\n}\nMatChipRow.ɵfac = function MatChipRow_Factory(t) {\n  return new (t || MatChipRow)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'));\n};\nMatChipRow.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatChipRow,\n  selectors: [[\"mat-chip-row\"], [\"\", \"mat-chip-row\", \"\"], [\"mat-basic-chip-row\"], [\"\", \"mat-basic-chip-row\", \"\"]],\n  contentQueries: function MatChipRow_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatChipEditInput, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentEditInput = _t.first);\n    }\n  },\n  viewQuery: function MatChipRow_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatChipEditInput, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultEditInput = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-row\", \"mdc-evolution-chip\"],\n  hostVars: 27,\n  hostBindings: function MatChipRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function MatChipRow_focus_HostBindingHandler($event) {\n        return ctx._handleFocus($event);\n      })(\"dblclick\", function MatChipRow_dblclick_HostBindingHandler($event) {\n        return ctx._handleDoubleclick($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n      i0.ɵɵclassProp(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-editing\", ctx._isEditing)(\"mat-mdc-chip-editable\", ctx.editable)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\",\n    editable: \"editable\"\n  },\n  outputs: {\n    edited: \"edited\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MatChip,\n    useExisting: MatChipRow\n  }, {\n    provide: MAT_CHIP,\n    useExisting: MatChipRow\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c4,\n  decls: 11,\n  vars: 13,\n  consts: [[4, \"ngIf\"], [\"role\", \"gridcell\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", 3, \"tabIndex\", \"disabled\"], [\"class\", \"mdc-evolution-chip__graphic mat-mdc-chip-graphic\", 4, \"ngIf\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [\"class\", \"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\", \"role\", \"gridcell\", 4, \"ngIf\"], [1, \"cdk-visually-hidden\", 3, \"id\"], [\"matRipple\", \"\", 1, \"mat-mdc-chip-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [4, \"ngIf\", \"ngIfElse\"], [\"defaultMatChipEditInput\", \"\"], [\"matChipEditInput\", \"\"], [\"role\", \"gridcell\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n  template: function MatChipRow_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c3);\n      i0.ɵɵtemplate(0, MatChipRow_ng_container_0_Template, 3, 3, \"ng-container\", 0);\n      i0.ɵɵelementStart(1, \"span\", 1)(2, \"span\", 2);\n      i0.ɵɵtemplate(3, MatChipRow_span_3_Template, 2, 0, \"span\", 3);\n      i0.ɵɵelementStart(4, \"span\", 4);\n      i0.ɵɵtemplate(5, MatChipRow_ng_container_5_Template, 2, 0, \"ng-container\", 5);\n      i0.ɵɵtemplate(6, MatChipRow_ng_container_6_Template, 4, 2, \"ng-container\", 5);\n      i0.ɵɵelement(7, \"span\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(8, MatChipRow_span_8_Template, 2, 0, \"span\", 7);\n      i0.ɵɵelementStart(9, \"span\", 8);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx._isEditing);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"tabIndex\", ctx.tabIndex)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"role\", ctx.editable ? \"button\" : null)(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx._ariaDescriptionId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.leadingIcon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitch\", ctx._isEditing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx._hasTrailingIcon());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"id\", ctx._ariaDescriptionId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.ariaDescription);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgSwitch, i2.NgSwitchCase, i3.MatRipple, MatChipAction, MatChipEditInput],\n  styles: [_c2],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]',\n      inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-editing]': '_isEditing',\n        '[class.mat-mdc-chip-editable]': 'editable',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[id]': 'id',\n        // Has to have a negative tabindex in order to capture\n        // focus and redirect it to the primary action.\n        '[attr.tabindex]': 'disabled ? null : -1',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '(focus)': '_handleFocus($event)',\n        '(dblclick)': '_handleDoubleclick($event)'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipRow\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipRow\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-container *ngIf=\\\"!_isEditing\\\">\\n  <span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n       [matRippleCentered]=\\\"_isRippleCentered\\\"\\n       [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n</ng-container>\\n\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\">\\n  <span\\n    matChipAction\\n    [attr.role]=\\\"editable ? 'button' : null\\\"\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\" [ngSwitch]=\\\"_isEditing\\\">\\n      <ng-container *ngSwitchCase=\\\"false\\\"><ng-content></ng-content></ng-container>\\n\\n      <ng-container *ngSwitchCase=\\\"true\\\">\\n        <ng-content *ngIf=\\\"contentEditInput; else defaultMatChipEditInput\\\"\\n                    select=\\\"[matChipEditInput]\\\"></ng-content>\\n        <ng-template #defaultMatChipEditInput><span matChipEditInput></span></ng-template>\\n      </ng-container>\\n\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  role=\\\"gridcell\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, {\n    editable: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }],\n    defaultEditInput: [{\n      type: ViewChild,\n      args: [MatChipEditInput]\n    }],\n    contentEditInput: [{\n      type: ContentChild,\n      args: [MatChipEditInput]\n    }]\n  });\n})();\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n/**\r\n * Boilerplate for applying mixins to MatChipSet.\r\n * @docs-private\r\n */\nclass MatChipSetBase {\n  constructor(_elementRef) {}\n}\nconst _MatChipSetMixinBase = mixinTabIndex(MatChipSetBase);\n/**\r\n * Basic container component for the MatChip component.\r\n *\r\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\r\n */\nclass MatChipSet extends _MatChipSetMixinBase {\n  /** Combined stream of all of the child chips' focus events. */\n  get chipFocusChanges() {\n    return this._getChipStream(chip => chip._onFocus);\n  }\n  /** Combined stream of all of the child chips' remove events. */\n  get chipDestroyedChanges() {\n    return this._getChipStream(chip => chip.destroyed);\n  }\n  /** Whether the chip set is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  /** Whether the chip list contains chips or not. */\n  get empty() {\n    return this._chips.length === 0;\n  }\n  /** The ARIA role applied to the chip set. */\n  get role() {\n    if (this._explicitRole) {\n      return this._explicitRole;\n    }\n    return this.empty ? null : this._defaultRole;\n  }\n  set role(value) {\n    this._explicitRole = value;\n  }\n  /** Whether any of the chips inside of this chip-set has focus. */\n  get focused() {\n    return this._hasFocusedChip();\n  }\n  constructor(_elementRef, _changeDetectorRef, _dir) {\n    super(_elementRef);\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    /** Index of the last destroyed chip that had focus. */\n    this._lastDestroyedFocusedChipIndex = null;\n    /** Subject that emits when the component has been destroyed. */\n    this._destroyed = new Subject();\n    /** Role to use if it hasn't been overwritten by the user. */\n    this._defaultRole = 'presentation';\n    this._disabled = false;\n    this._explicitRole = null;\n    /** Flat list of all the actions contained within the chips. */\n    this._chipActions = new QueryList();\n  }\n  ngAfterViewInit() {\n    this._setUpFocusManagement();\n    this._trackChipSetChanges();\n    this._trackDestroyedFocusedChip();\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._chipActions.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Checks whether any of the chips is focused. */\n  _hasFocusedChip() {\n    return this._chips && this._chips.some(chip => chip._hasFocus());\n  }\n  /** Syncs the chip-set's state with the individual chips. */\n  _syncChipsState() {\n    if (this._chips) {\n      this._chips.forEach(chip => {\n        chip.disabled = this._disabled;\n        chip._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n  focus() {}\n  /** Handles keyboard events on the chip set. */\n  _handleKeydown(event) {\n    if (this._originatesFromChip(event)) {\n      this._keyManager.onKeydown(event);\n    }\n  }\n  /**\r\n   * Utility to ensure all indexes are valid.\r\n   *\r\n   * @param index The index to be checked.\r\n   * @returns True if the index is valid for our list of chips.\r\n   */\n  _isValidIndex(index) {\n    return index >= 0 && index < this._chips.length;\n  }\n  /**\r\n   * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\r\n   * user to tab out of it. This prevents the set from capturing focus and redirecting\r\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\r\n   */\n  _allowFocusEscape() {\n    if (this.tabIndex !== -1) {\n      const previousTabIndex = this.tabIndex;\n      this.tabIndex = -1;\n      // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n      // doesn't allow enough time for the focus to escape.\n      setTimeout(() => this.tabIndex = previousTabIndex);\n    }\n  }\n  /**\r\n   * Gets a stream of events from all the chips within the set.\r\n   * The stream will automatically incorporate any newly-added chips.\r\n   */\n  _getChipStream(mappingFunction) {\n    return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n  }\n  /** Checks whether an event comes from inside a chip element. */\n  _originatesFromChip(event) {\n    let currentElement = event.target;\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('mat-mdc-chip')) {\n        return true;\n      }\n      currentElement = currentElement.parentElement;\n    }\n    return false;\n  }\n  /** Sets up the chip set's focus management logic. */\n  _setUpFocusManagement() {\n    // Create a flat `QueryList` containing the actions of all of the chips.\n    // This allows us to navigate both within the chip and move to the next/previous\n    // one using the existing `ListKeyManager`.\n    this._chips.changes.pipe(startWith(this._chips)).subscribe(chips => {\n      const actions = [];\n      chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n      this._chipActions.reset(actions);\n      this._chipActions.notifyOnChanges();\n    });\n    this._keyManager = new FocusKeyManager(this._chipActions).withVerticalOrientation().withHorizontalOrientation(this._dir ? this._dir.value : 'ltr').withHomeAndEnd().skipPredicate(action => this._skipPredicate(action));\n    // Keep the manager active index in sync so that navigation picks\n    // up from the current chip if the user clicks into the list directly.\n    this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({\n      chip\n    }) => {\n      const action = chip._getSourceAction(document.activeElement);\n      if (action) {\n        this._keyManager.updateActiveItem(action);\n      }\n    });\n    this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n  }\n  /**\r\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\r\n   * non-interactive and disabled actions since the user can't do anything with them.\r\n   */\n  _skipPredicate(action) {\n    // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n    // chips.\n    return !action.isInteractive || action.disabled;\n  }\n  /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n  _trackChipSetChanges() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => this._syncChipsState());\n      }\n      this._redirectDestroyedChipFocus();\n    });\n  }\n  /** Starts tracking the destroyed chips in order to capture the focused one. */\n  _trackDestroyedFocusedChip() {\n    this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      const chipArray = this._chips.toArray();\n      const chipIndex = chipArray.indexOf(event.chip);\n      // If the focused chip is destroyed, save its index so that we can move focus to the next\n      // chip. We only save the index here, rather than move the focus immediately, because we want\n      // to wait until the chip is removed from the chip list before focusing the next one. This\n      // allows us to keep focus on the same index if the chip gets swapped out.\n      if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\n        this._lastDestroyedFocusedChipIndex = chipIndex;\n      }\n    });\n  }\n  /**\r\n   * Finds the next appropriate chip to move focus to,\r\n   * if the currently-focused chip is destroyed.\r\n   */\n  _redirectDestroyedChipFocus() {\n    if (this._lastDestroyedFocusedChipIndex == null) {\n      return;\n    }\n    if (this._chips.length) {\n      const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n      const chipToFocus = this._chips.toArray()[newIndex];\n      if (chipToFocus.disabled) {\n        // If we're down to one disabled chip, move focus back to the set.\n        if (this._chips.length === 1) {\n          this.focus();\n        } else {\n          this._keyManager.setPreviousItemActive();\n        }\n      } else {\n        chipToFocus.focus();\n      }\n    } else {\n      this.focus();\n    }\n    this._lastDestroyedFocusedChipIndex = null;\n  }\n}\nMatChipSet.ɵfac = function MatChipSet_Factory(t) {\n  return new (t || MatChipSet)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.Directionality, 8));\n};\nMatChipSet.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatChipSet,\n  selectors: [[\"mat-chip-set\"]],\n  contentQueries: function MatChipSet_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatChip, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-mdc-chip-set\", \"mdc-evolution-chip-set\"],\n  hostVars: 1,\n  hostBindings: function MatChipSet_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function MatChipSet_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx.role);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    role: \"role\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c5,\n  decls: 2,\n  vars: 0,\n  consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n  template: function MatChipSet_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipSet, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-set',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n        '(keydown)': '_handleKeydown($event)',\n        '[attr.role]': 'role'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    role: [{\n      type: Input\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChip, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n  constructor( /** Chip listbox that emitted the event. */\n  source, /** Value of the chip listbox when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\r\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\r\n * This allows it to support [(ngModel)].\r\n * @docs-private\r\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatChipListbox),\n  multi: true\n};\n/**\r\n * An extension of the MatChipSet component that supports chip selection.\r\n * Used with MatChipOption chips.\r\n */\nclass MatChipListbox extends MatChipSet {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * Function when touched. Set as part of ControlValueAccessor implementation.\r\n     * @docs-private\r\n     */\n    this._onTouched = () => {};\n    /**\r\n     * Function when changed. Set as part of ControlValueAccessor implementation.\r\n     * @docs-private\r\n     */\n    this._onChange = () => {};\n    // TODO: MDC uses `grid` here\n    this._defaultRole = 'listbox';\n    /** Default chip options. */\n    this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    this._multiple = false;\n    /** Orientation of the chip list. */\n    this.ariaOrientation = 'horizontal';\n    this._selectable = true;\n    /**\r\n     * A function to compare the option values with the selected values. The first argument\r\n     * is a value from an option. The second is a value from the selection. A boolean\r\n     * should be returned.\r\n     */\n    this.compareWith = (o1, o2) => o1 === o2;\n    this._required = false;\n    this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /** Event emitted when the selected chip listbox value has been changed by the user. */\n    this.change = new EventEmitter();\n  }\n  /** Whether the user should be allowed to select multiple chips. */\n  get multiple() {\n    return this._multiple;\n  }\n  set multiple(value) {\n    this._multiple = coerceBooleanProperty(value);\n    this._syncListboxProperties();\n  }\n  /** The array of selected chips inside the chip listbox. */\n  get selected() {\n    const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n    return this.multiple ? selectedChips : selectedChips[0];\n  }\n  /**\r\n   * Whether or not this chip listbox is selectable.\r\n   *\r\n   * When a chip listbox is not selectable, the selected states for all\r\n   * the chips inside the chip listbox are always ignored.\r\n   */\n  get selectable() {\n    return this._selectable;\n  }\n  set selectable(value) {\n    this._selectable = coerceBooleanProperty(value);\n    this._syncListboxProperties();\n  }\n  /** Whether this chip listbox is required. */\n  get required() {\n    return this._required;\n  }\n  set required(value) {\n    this._required = coerceBooleanProperty(value);\n  }\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = coerceBooleanProperty(value);\n    this._syncListboxProperties();\n  }\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges() {\n    return this._getChipStream(chip => chip.selectionChange);\n  }\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  /** The value of the listbox, which is the combined value of the selected chips. */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.writeValue(value);\n    this._value = value;\n  }\n  ngAfterContentInit() {\n    if (this._pendingInitialValue !== undefined) {\n      Promise.resolve().then(() => {\n        this._setSelectionByValue(this._pendingInitialValue, false);\n        this._pendingInitialValue = undefined;\n      });\n    }\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      // Update listbox selectable/multiple properties on chips\n      this._syncListboxProperties();\n    });\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n    this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      if (!this.multiple) {\n        this._chips.forEach(chip => {\n          if (chip !== event.source) {\n            chip._setSelectedState(false, false, false);\n          }\n        });\n      }\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n  /**\r\n   * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\r\n   * are no selected chips.\r\n   */\n  focus() {\n    if (this.disabled) {\n      return;\n    }\n    const firstSelectedChip = this._getFirstSelectedChip();\n    if (firstSelectedChip && !firstSelectedChip.disabled) {\n      firstSelectedChip.focus();\n    } else if (this._chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  writeValue(value) {\n    if (this._chips) {\n      this._setSelectionByValue(value, false);\n    } else if (value != null) {\n      this._pendingInitialValue = value;\n    }\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /** Selects all chips with value. */\n  _setSelectionByValue(value, isUserInput = true) {\n    this._clearSelection();\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n    } else {\n      this._selectValue(value, isUserInput);\n    }\n  }\n  /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n  _blur() {\n    if (!this.disabled) {\n      // Wait to see if focus moves to an individual chip.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._propagateChanges();\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  _keydown(event) {\n    if (event.keyCode === TAB) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Marks the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    let valueToEmit = null;\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : undefined;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListboxChange(this, valueToEmit));\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\r\n   * Deselects every chip in the listbox.\r\n   * @param skip Chip that should not be deselected.\r\n   */\n  _clearSelection(skip) {\n    this._chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n  }\n  /**\r\n   * Finds and selects the chip based on its value.\r\n   * @returns Chip that has the corresponding value.\r\n   */\n  _selectValue(value, isUserInput) {\n    const correspondingChip = this._chips.find(chip => {\n      return chip.value != null && this.compareWith(chip.value, value);\n    });\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n    }\n    return correspondingChip;\n  }\n  /** Syncs the chip-listbox selection state with the individual chips. */\n  _syncListboxProperties() {\n    if (this._chips) {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this._chips.forEach(chip => {\n          chip._chipListMultiple = this.multiple;\n          chip.chipListSelectable = this._selectable;\n          chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n          chip._changeDetectorRef.markForCheck();\n        });\n      });\n    }\n  }\n  /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n  _getFirstSelectedChip() {\n    if (Array.isArray(this.selected)) {\n      return this.selected.length ? this.selected[0] : undefined;\n    } else {\n      return this.selected;\n    }\n  }\n  /**\r\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\r\n   * non-interactive actions since the user can't do anything with them.\r\n   */\n  _skipPredicate(action) {\n    // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n    // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n    // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n    // exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    return !action.isInteractive;\n  }\n}\nMatChipListbox.ɵfac = /* @__PURE__ */function () {\n  let ɵMatChipListbox_BaseFactory;\n  return function MatChipListbox_Factory(t) {\n    return (ɵMatChipListbox_BaseFactory || (ɵMatChipListbox_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipListbox)))(t || MatChipListbox);\n  };\n}();\nMatChipListbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatChipListbox,\n  selectors: [[\"mat-chip-listbox\"]],\n  contentQueries: function MatChipListbox_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatChipOption, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n    }\n  },\n  hostAttrs: [1, \"mdc-evolution-chip-set\", \"mat-mdc-chip-listbox\"],\n  hostVars: 11,\n  hostBindings: function MatChipListbox_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function MatChipListbox_focus_HostBindingHandler() {\n        return ctx.focus();\n      })(\"blur\", function MatChipListbox_blur_HostBindingHandler() {\n        return ctx._blur();\n      })(\"keydown\", function MatChipListbox_keydown_HostBindingHandler($event) {\n        return ctx._keydown($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"tabIndex\", ctx.empty ? -1 : ctx.tabIndex);\n      i0.ɵɵattribute(\"role\", ctx.role)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-multiselectable\", ctx.multiple)(\"aria-orientation\", ctx.ariaOrientation);\n      i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-required\", ctx.required);\n    }\n  },\n  inputs: {\n    tabIndex: \"tabIndex\",\n    multiple: \"multiple\",\n    ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"],\n    selectable: \"selectable\",\n    compareWith: \"compareWith\",\n    required: \"required\",\n    hideSingleSelectionIndicator: \"hideSingleSelectionIndicator\",\n    value: \"value\"\n  },\n  outputs: {\n    change: \"change\"\n  },\n  features: [i0.ɵɵProvidersFeature([MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c5,\n  decls: 2,\n  vars: 0,\n  consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n  template: function MatChipListbox_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [_c6],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipListbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-listbox',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      inputs: ['tabIndex'],\n      host: {\n        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n        '[attr.role]': 'role',\n        '[tabIndex]': 'empty ? -1 : tabIndex',\n        // TODO: replace this binding with use of AriaDescriber\n        '[attr.aria-describedby]': '_ariaDescribedby || null',\n        '[attr.aria-required]': 'role ? required : null',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-multiselectable]': 'multiple',\n        '[attr.aria-orientation]': 'ariaOrientation',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()',\n        '(keydown)': '_keydown($event)'\n      },\n      providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], null, {\n    multiple: [{\n      type: Input\n    }],\n    ariaOrientation: [{\n      type: Input,\n      args: ['aria-orientation']\n    }],\n    selectable: [{\n      type: Input\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipOption, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n  constructor( /** Chip grid that emitted the event. */\n  source, /** Value of the chip grid when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\r\n * Boilerplate for applying mixins to MatChipGrid.\r\n * @docs-private\r\n */\nclass MatChipGridBase extends MatChipSet {\n  constructor(elementRef, changeDetectorRef, dir, _defaultErrorStateMatcher, _parentForm, _parentFormGroup,\n  /**\r\n   * Form control bound to the component.\r\n   * Implemented as part of `MatFormFieldControl`.\r\n   * @docs-private\r\n   */\n  ngControl) {\n    super(elementRef, changeDetectorRef, dir);\n    this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n    this._parentForm = _parentForm;\n    this._parentFormGroup = _parentFormGroup;\n    this.ngControl = ngControl;\n    /**\r\n     * Emits whenever the component state changes and should cause the parent\r\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\r\n     * @docs-private\r\n     */\n    this.stateChanges = new Subject();\n  }\n}\nconst _MatChipGridMixinBase = mixinErrorState(MatChipGridBase);\n/**\r\n * An extension of the MatChipSet component used with MatChipRow chips and\r\n * the matChipInputFor directive.\r\n */\nclass MatChipGrid extends _MatChipGridMixinBase {\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get disabled() {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get id() {\n    return this._chipInput.id;\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get empty() {\n    return (!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0);\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get placeholder() {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n  set placeholder(value) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n  get focused() {\n    return this._chipInput.focused || this._hasFocusedChip();\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get shouldLabelFloat() {\n    return !this.empty || this.focused;\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value;\n  }\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  constructor(elementRef, changeDetectorRef, dir, parentForm, parentFormGroup, defaultErrorStateMatcher, ngControl) {\n    super(elementRef, changeDetectorRef, dir, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\n    this.controlType = 'mat-chip-grid';\n    this._defaultRole = 'grid';\n    /**\r\n     * List of element ids to propagate to the chipInput's aria-describedby attribute.\r\n     */\n    this._ariaDescribedbyIds = [];\n    /**\r\n     * Function when touched. Set as part of ControlValueAccessor implementation.\r\n     * @docs-private\r\n     */\n    this._onTouched = () => {};\n    /**\r\n     * Function when changed. Set as part of ControlValueAccessor implementation.\r\n     * @docs-private\r\n     */\n    this._onChange = () => {};\n    this._value = [];\n    /** Emits when the chip grid value has been changed by the user. */\n    this.change = new EventEmitter();\n    /**\r\n     * Emits whenever the raw value of the chip-grid changes. This is here primarily\r\n     * to facilitate the two-way binding for the `value` input.\r\n     * @docs-private\r\n     */\n    this.valueChange = new EventEmitter();\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n  ngAfterContentInit() {\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n    merge(this.chipFocusChanges, this._chips.changes).pipe(takeUntil(this._destroyed)).subscribe(() => this.stateChanges.next());\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n    }\n  }\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.stateChanges.complete();\n  }\n  /** Associates an HTML input element with this chip grid. */\n  registerInput(inputElement) {\n    this._chipInput = inputElement;\n    this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  onContainerClick(event) {\n    if (!this.disabled && !this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n  /**\r\n   * Focuses the first chip in this chip grid, or the associated input when there\r\n   * are no eligible chips.\r\n   */\n  focus() {\n    if (this.disabled || this._chipInput.focused) {\n      return;\n    }\n    if (!this._chips.length || this._chips.first.disabled) {\n      // Delay until the next tick, because this can cause a \"changed after checked\"\n      // error if the input does something on focus (e.g. opens an autocomplete).\n      Promise.resolve().then(() => this._chipInput.focus());\n    } else if (this._chips.length) {\n      this._keyManager.setFirstItemActive();\n    }\n    this.stateChanges.next();\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  setDescribedByIds(ids) {\n    // We must keep this up to date to handle the case where ids are set\n    // before the chip input is registered.\n    this._ariaDescribedbyIds = ids;\n    this._chipInput?.setDescribedByIds(ids);\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  writeValue(value) {\n    // The user is responsible for creating the child chips, so we just store the value.\n    this._value = value;\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n  /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n  _blur() {\n    if (!this.disabled) {\n      // Check whether the focus moved to chip input.\n      // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n      // to chip input, do nothing.\n      // Timeout is needed to wait for the focus() event trigger on chip input.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._propagateChanges();\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  /**\r\n   * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\r\n   * user to tab out of it. This prevents the grid from capturing focus and redirecting\r\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\r\n   */\n  _allowFocusEscape() {\n    if (!this._chipInput.focused) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Handles custom keyboard events. */\n  _handleKeydown(event) {\n    if (event.keyCode === TAB) {\n      if (this._chipInput.focused && hasModifierKey(event, 'shiftKey') && this._chips.length && !this._chips.last.disabled) {\n        event.preventDefault();\n        if (this._keyManager.activeItem) {\n          this._keyManager.setActiveItem(this._keyManager.activeItem);\n        } else {\n          this._focusLastChip();\n        }\n      } else {\n        // Use the super method here since it doesn't check for the input\n        // focused state. This allows focus to escape if there's only one\n        // disabled chip left in the list.\n        super._allowFocusEscape();\n      }\n    } else if (!this._chipInput.focused) {\n      super._handleKeydown(event);\n    }\n    this.stateChanges.next();\n  }\n  _focusLastChip() {\n    if (this._chips.length) {\n      this._chips.last.focus();\n    }\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n    this._value = valueToEmit;\n    this.change.emit(new MatChipGridChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n}\nMatChipGrid.ɵfac = function MatChipGrid_Factory(t) {\n  return new (t || MatChipGrid)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.Directionality, 8), i0.ɵɵdirectiveInject(i2$1.NgForm, 8), i0.ɵɵdirectiveInject(i2$1.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i3.ErrorStateMatcher), i0.ɵɵdirectiveInject(i2$1.NgControl, 10));\n};\nMatChipGrid.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatChipGrid,\n  selectors: [[\"mat-chip-grid\"]],\n  contentQueries: function MatChipGrid_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatChipRow, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-mdc-chip-set\", \"mat-mdc-chip-grid\", \"mdc-evolution-chip-set\"],\n  hostVars: 10,\n  hostBindings: function MatChipGrid_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function MatChipGrid_focus_HostBindingHandler() {\n        return ctx.focus();\n      })(\"blur\", function MatChipGrid_blur_HostBindingHandler() {\n        return ctx._blur();\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"tabIndex\", ctx._chips && ctx._chips.length === 0 ? -1 : ctx.tabIndex);\n      i0.ɵɵattribute(\"role\", ctx.role)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState);\n      i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-invalid\", ctx.errorState)(\"mat-mdc-chip-list-required\", ctx.required);\n    }\n  },\n  inputs: {\n    tabIndex: \"tabIndex\",\n    disabled: \"disabled\",\n    placeholder: \"placeholder\",\n    required: \"required\",\n    value: \"value\",\n    errorStateMatcher: \"errorStateMatcher\"\n  },\n  outputs: {\n    change: \"change\",\n    valueChange: \"valueChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MatFormFieldControl,\n    useExisting: MatChipGrid\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c5,\n  decls: 2,\n  vars: 0,\n  consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n  template: function MatChipGrid_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [_c6],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipGrid, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-grid',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      inputs: ['tabIndex'],\n      host: {\n        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n        '[attr.role]': 'role',\n        '[tabIndex]': '_chips && _chips.length === 0 ? -1 : tabIndex',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()'\n      },\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatChipGrid\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2$1.NgForm,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2$1.FormGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.ErrorStateMatcher\n    }, {\n      type: i2$1.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    errorStateMatcher: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipRow, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n/**\r\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\r\n * May be placed inside or outside of a `<mat-chip-grid>`.\r\n */\nclass MatChipInput {\n  /** Register input for chip list */\n  set chipGrid(value) {\n    if (value) {\n      this._chipGrid = value;\n      this._chipGrid.registerInput(this);\n    }\n  }\n  /**\r\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\r\n   */\n  get addOnBlur() {\n    return this._addOnBlur;\n  }\n  set addOnBlur(value) {\n    this._addOnBlur = coerceBooleanProperty(value);\n  }\n  /** Whether the input is disabled. */\n  get disabled() {\n    return this._disabled || this._chipGrid && this._chipGrid.disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  /** Whether the input is empty. */\n  get empty() {\n    return !this.inputElement.value;\n  }\n  constructor(_elementRef, _defaultOptions, formField) {\n    this._elementRef = _elementRef;\n    this._defaultOptions = _defaultOptions;\n    /** Whether the control is focused. */\n    this.focused = false;\n    this._addOnBlur = false;\n    /**\r\n     * The list of key codes that will trigger a chipEnd event.\r\n     *\r\n     * Defaults to `[ENTER]`.\r\n     */\n    this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n    /** Emitted when a chip is to be added. */\n    this.chipEnd = new EventEmitter();\n    /** The input's placeholder text. */\n    this.placeholder = '';\n    /** Unique id for the input. */\n    this.id = `mat-mdc-chip-list-input-${nextUniqueId++}`;\n    this._disabled = false;\n    this.inputElement = this._elementRef.nativeElement;\n    if (formField) {\n      this.inputElement.classList.add('mat-mdc-form-field-input-control');\n    }\n  }\n  ngOnChanges() {\n    this._chipGrid.stateChanges.next();\n  }\n  ngOnDestroy() {\n    this.chipEnd.complete();\n  }\n  ngAfterContentInit() {\n    this._focusLastChipOnBackspace = this.empty;\n  }\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event) {\n    if (event) {\n      // To prevent the user from accidentally deleting chips when pressing BACKSPACE continuously,\n      // We focus the last chip on backspace only after the user has released the backspace button,\n      // And the input is empty (see behaviour in _keyup)\n      if (event.keyCode === BACKSPACE && this._focusLastChipOnBackspace) {\n        this._chipGrid._focusLastChip();\n        event.preventDefault();\n        return;\n      } else {\n        this._focusLastChipOnBackspace = false;\n      }\n    }\n    this._emitChipEnd(event);\n  }\n  /**\r\n   * Pass events to the keyboard manager. Available here for tests.\r\n   */\n  _keyup(event) {\n    // Allow user to move focus to chips next time he presses backspace\n    if (!this._focusLastChipOnBackspace && event.keyCode === BACKSPACE && this.empty) {\n      this._focusLastChipOnBackspace = true;\n      event.preventDefault();\n    }\n  }\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipGrid.focused) {\n      this._chipGrid._blur();\n    }\n    this._chipGrid.stateChanges.next();\n  }\n  _focus() {\n    this.focused = true;\n    this._focusLastChipOnBackspace = this.empty;\n    this._chipGrid.stateChanges.next();\n  }\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event) {\n    if (!event || this._isSeparatorKey(event)) {\n      this.chipEnd.emit({\n        input: this.inputElement,\n        value: this.inputElement.value,\n        chipInput: this\n      });\n      event?.preventDefault();\n    }\n  }\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipGrid.stateChanges.next();\n  }\n  /** Focuses the input. */\n  focus() {\n    this.inputElement.focus();\n  }\n  /** Clears the input */\n  clear() {\n    this.inputElement.value = '';\n    this._focusLastChipOnBackspace = true;\n  }\n  setDescribedByIds(ids) {\n    const element = this._elementRef.nativeElement;\n    // Set the value directly in the DOM since this binding\n    // is prone to \"changed after checked\" errors.\n    if (ids.length) {\n      element.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      element.removeAttribute('aria-describedby');\n    }\n  }\n  /** Checks whether a keycode is one of the configured separators. */\n  _isSeparatorKey(event) {\n    return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n  }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) {\n  return new (t || MatChipInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n};\nMatChipInput.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatChipInput,\n  selectors: [[\"input\", \"matChipInputFor\", \"\"]],\n  hostAttrs: [1, \"mat-mdc-chip-input\", \"mat-mdc-input-element\", \"mdc-text-field__input\", \"mat-input-element\"],\n  hostVars: 6,\n  hostBindings: function MatChipInput_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) {\n        return ctx._keydown($event);\n      })(\"keyup\", function MatChipInput_keyup_HostBindingHandler($event) {\n        return ctx._keyup($event);\n      })(\"blur\", function MatChipInput_blur_HostBindingHandler() {\n        return ctx._blur();\n      })(\"focus\", function MatChipInput_focus_HostBindingHandler() {\n        return ctx._focus();\n      })(\"input\", function MatChipInput_input_HostBindingHandler() {\n        return ctx._onInput();\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipGrid && ctx._chipGrid.ngControl ? ctx._chipGrid.ngControl.invalid : null)(\"aria-required\", ctx._chipGrid && ctx._chipGrid.required || null)(\"required\", ctx._chipGrid && ctx._chipGrid.required || null);\n    }\n  },\n  inputs: {\n    chipGrid: [\"matChipInputFor\", \"chipGrid\"],\n    addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"],\n    separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"],\n    placeholder: \"placeholder\",\n    id: \"id\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    chipEnd: \"matChipInputTokenEnd\"\n  },\n  exportAs: [\"matChipInput\", \"matChipInputFor\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matChipInputFor]',\n      exportAs: 'matChipInput, matChipInputFor',\n      host: {\n        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n        // the MDC chips were landed initially with it.\n        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n        '(keydown)': '_keydown($event)',\n        '(keyup)': '_keyup($event)',\n        '(blur)': '_blur()',\n        '(focus)': '_focus()',\n        '(input)': '_onInput()',\n        '[id]': 'id',\n        '[attr.disabled]': 'disabled || null',\n        '[attr.placeholder]': 'placeholder || null',\n        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n        '[attr.required]': '_chipGrid && _chipGrid.required || null'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_CHIPS_DEFAULT_OPTIONS]\n      }]\n    }, {\n      type: i1$2.MatFormField,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_FORM_FIELD]\n      }]\n    }];\n  }, {\n    chipGrid: [{\n      type: Input,\n      args: ['matChipInputFor']\n    }],\n    addOnBlur: [{\n      type: Input,\n      args: ['matChipInputAddOnBlur']\n    }],\n    separatorKeyCodes: [{\n      type: Input,\n      args: ['matChipInputSeparatorKeyCodes']\n    }],\n    chipEnd: [{\n      type: Output,\n      args: ['matChipInputTokenEnd']\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\nconst CHIP_DECLARATIONS = [MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipInput, MatChipListbox, MatChipOption, MatChipRemove, MatChipRow, MatChipSet, MatChipTrailingIcon];\nclass MatChipsModule {}\nMatChipsModule.ɵfac = function MatChipsModule_Factory(t) {\n  return new (t || MatChipsModule)();\n};\nMatChipsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatChipsModule\n});\nMatChipsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [ErrorStateMatcher, {\n    provide: MAT_CHIPS_DEFAULT_OPTIONS,\n    useValue: {\n      separatorKeyCodes: [ENTER]\n    }\n  }],\n  imports: [MatCommonModule, CommonModule, MatRippleModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CommonModule, MatRippleModule],\n      exports: [MatCommonModule, CHIP_DECLARATIONS],\n      declarations: [MatChipAction, CHIP_DECLARATIONS],\n      providers: [ErrorStateMatcher, {\n        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n        useValue: {\n          separatorKeyCodes: [ENTER]\n        }\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };","map":{"version":3,"names":["coerceBooleanProperty","ANIMATION_MODULE_TYPE","i0","InjectionToken","Directive","Inject","Input","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Attribute","ContentChildren","Output","ContentChild","ViewChild","inject","QueryList","forwardRef","Self","NgModule","i2","DOCUMENT","CommonModule","i3","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","mixinErrorState","MatCommonModule","MatRippleModule","ErrorStateMatcher","i1","FocusKeyManager","Subject","merge","take","takeUntil","startWith","switchMap","ENTER","SPACE","BACKSPACE","DELETE","TAB","hasModifierKey","i1$1","i2$1","NG_VALUE_ACCESSOR","Validators","i1$2","MatFormFieldControl","MAT_FORM_FIELD","MAT_CHIPS_DEFAULT_OPTIONS","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MAT_CHIP_REMOVE","MAT_CHIP","_MatChipActionBase","_MatChipActionMixinBase","MatChipAction","disabled","_disabled","_parentChip","value","_getDisabledAttribute","_allowFocusWhenDisabled","_getTabindex","isInteractive","tabIndex","toString","constructor","_elementRef","_isPrimary","nativeElement","nodeName","setAttribute","focus","_handleClick","event","preventDefault","_handlePrimaryActionInteraction","_handleKeydown","keyCode","_isEditing","ɵfac","ElementRef","ɵdir","type","args","selector","inputs","host","undefined","decorators","MatChipAvatar","provide","useExisting","providers","MatChipTrailingIcon","arguments","MatChipRemove","stopPropagation","remove","uid","_MatChipMixinBase","MatChip","_hasFocus","_hasFocusInternal","_value","_textElement","textContent","trim","removable","_removable","highlighted","_highlighted","_changeDetectorRef","elementRef","_ngZone","_focusMonitor","_document","animationMode","_globalRippleOptions","_isRippleCentered","_onFocus","_onBlur","role","id","ariaLabel","ariaDescription","_ariaDescriptionId","removed","destroyed","basicChipAttrName","_animationsDisabled","parseInt","defaultTabIndex","_monitorFocus","ngOnInit","element","_isBasicChip","hasAttribute","tagName","toLowerCase","ngAfterViewInit","querySelector","_pendingFocus","ngAfterContentInit","_actionChanges","_allLeadingIcons","changes","_allTrailingIcons","_allRemoveIcons","subscribe","markForCheck","ngOnDestroy","stopMonitoring","unsubscribe","emit","chip","complete","_isRippleDisabled","disableRipple","_hasTrailingIcon","trailingIcon","removeIcon","primaryAction","_getSourceAction","target","_getActions","find","action","contains","result","push","monitor","origin","hasFocus","next","onStable","pipe","run","ChangeDetectorRef","NgZone","FocusMonitor","ɵcmp","NgIf","exportAs","encapsulation","None","changeDetection","OnPush","template","styles","descendants","leadingIcon","ripple","MatChipSelectionChange","source","selected","isUserInput","MatChipOption","_defaultOptions","optional","chipListSelectable","_chipListMultiple","_chipListHideSingleSelectionIndicator","hideSingleSelectionIndicator","_selectable","_selected","selectionChange","selectable","_setSelectedState","ariaSelected","select","deselect","selectViaInteraction","toggleSelected","_hasLeadingGraphic","isSelected","emitEvent","MatChipEditInput","initialize","initialValue","getNativeElement","setValue","_moveCursorToEndOfInput","getValue","range","createRange","selectNodeContents","collapse","sel","window","getSelection","removeAllRanges","addRange","MatChipRow","changeDetectorRef","ngZone","focusMonitor","globalRippleOptions","_editStartPending","editable","edited","_onEditFinish","_handleFocus","_startEditing","_handleDoubleclick","setTimeout","_getEditInput","activeElement","body","contentEditInput","defaultEditInput","NgSwitch","NgSwitchCase","MatChipSetBase","_MatChipSetMixinBase","MatChipSet","chipFocusChanges","_getChipStream","chipDestroyedChanges","_syncChipsState","empty","_chips","length","_explicitRole","_defaultRole","focused","_hasFocusedChip","_dir","_lastDestroyedFocusedChipIndex","_destroyed","_chipActions","_setUpFocusManagement","_trackChipSetChanges","_trackDestroyedFocusedChip","_keyManager","destroy","some","forEach","_originatesFromChip","onKeydown","_isValidIndex","index","_allowFocusEscape","previousTabIndex","mappingFunction","map","currentElement","classList","parentElement","chips","actions","reset","notifyOnChanges","withVerticalOrientation","withHorizontalOrientation","withHomeAndEnd","skipPredicate","_skipPredicate","document","updateActiveItem","change","direction","Promise","resolve","then","_redirectDestroyedChipFocus","chipArray","toArray","chipIndex","indexOf","newIndex","Math","min","chipToFocus","setPreviousItemActive","Directionality","MatChipListboxChange","MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR","MatChipListbox","multi","_onTouched","_onChange","_multiple","ariaOrientation","compareWith","o1","o2","_required","_hideSingleSelectionIndicator","multiple","_syncListboxProperties","selectedChips","filter","required","chipSelectionChanges","chipBlurChanges","writeValue","_pendingInitialValue","_setSelectionByValue","_blur","_propagateChanges","firstSelectedChip","_getFirstSelectedChip","setFirstItemActive","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_clearSelection","Array","isArray","currentValue","_selectValue","_markAsTouched","_keydown","valueToEmit","skip","correspondingChip","MatChipGridChange","MatChipGridBase","dir","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","stateChanges","_MatChipGridMixinBase","MatChipGrid","_chipInput","placeholder","_placeholder","control","hasValidator","shouldLabelFloat","parentForm","parentFormGroup","defaultErrorStateMatcher","controlType","_ariaDescribedbyIds","valueChange","valueAccessor","ngDevMode","Error","ngDoCheck","updateErrorState","registerInput","inputElement","setDescribedByIds","onContainerClick","first","ids","last","activeItem","setActiveItem","_focusLastChip","NgForm","FormGroupDirective","NgControl","errorStateMatcher","nextUniqueId","MatChipInput","chipGrid","_chipGrid","addOnBlur","_addOnBlur","formField","separatorKeyCodes","chipEnd","add","ngOnChanges","_focusLastChipOnBackspace","_emitChipEnd","_keyup","_focus","_isSeparatorKey","input","chipInput","_onInput","clear","join","removeAttribute","Set","has","MatFormField","CHIP_DECLARATIONS","MatChipsModule","ɵmod","ɵinj","useValue","imports","exports","declarations"],"sources":["C:/atv-app/node_modules/@angular/material/fesm2020/chips.mjs"],"sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\r\nimport * as i0 from '@angular/core';\r\nimport { InjectionToken, Directive, Inject, Input, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, ContentChildren, Output, ContentChild, ViewChild, inject, QueryList, forwardRef, Self, NgModule } from '@angular/core';\r\nimport * as i2 from '@angular/common';\r\nimport { DOCUMENT, CommonModule } from '@angular/common';\r\nimport * as i3 from '@angular/material/core';\r\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, mixinErrorState, MatCommonModule, MatRippleModule, ErrorStateMatcher } from '@angular/material/core';\r\nimport * as i1 from '@angular/cdk/a11y';\r\nimport { FocusKeyManager } from '@angular/cdk/a11y';\r\nimport { Subject, merge } from 'rxjs';\r\nimport { take, takeUntil, startWith, switchMap } from 'rxjs/operators';\r\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey } from '@angular/cdk/keycodes';\r\nimport * as i1$1 from '@angular/cdk/bidi';\r\nimport * as i2$1 from '@angular/forms';\r\nimport { NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\r\nimport * as i1$2 from '@angular/material/form-field';\r\nimport { MatFormFieldControl, MAT_FORM_FIELD } from '@angular/material/form-field';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Injection token to be used to override the default options for the chips module. */\r\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\r\n/**\r\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\r\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\r\n/**\r\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\r\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\r\n/**\r\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\r\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\r\n/**\r\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\r\n */\r\nconst MAT_CHIP = new InjectionToken('MatChip');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass _MatChipActionBase {\r\n}\r\nconst _MatChipActionMixinBase = mixinTabIndex(_MatChipActionBase, -1);\r\n/**\r\n * Section within a chip.\r\n * @docs-private\r\n */\r\nclass MatChipAction extends _MatChipActionMixinBase {\r\n    /** Whether the action is disabled. */\r\n    get disabled() {\r\n        return this._disabled || this._parentChip.disabled;\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n    }\r\n    /**\r\n     * Determine the value of the disabled attribute for this chip action.\r\n     */\r\n    _getDisabledAttribute() {\r\n        // When this chip action is disabled and focusing disabled chips is not permitted, return empty\r\n        // string to indicate that disabled attribute should be included.\r\n        return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\r\n    }\r\n    /**\r\n     * Determine the value of the tabindex attribute for this chip action.\r\n     */\r\n    _getTabindex() {\r\n        return (this.disabled && !this._allowFocusWhenDisabled) || !this.isInteractive\r\n            ? null\r\n            : this.tabIndex.toString();\r\n    }\r\n    constructor(_elementRef, _parentChip) {\r\n        super();\r\n        this._elementRef = _elementRef;\r\n        this._parentChip = _parentChip;\r\n        /** Whether the action is interactive. */\r\n        this.isInteractive = true;\r\n        /** Whether this is the primary action in the chip. */\r\n        this._isPrimary = true;\r\n        this._disabled = false;\r\n        /**\r\n         * Private API to allow focusing this chip when it is disabled.\r\n         */\r\n        this._allowFocusWhenDisabled = false;\r\n        if (_elementRef.nativeElement.nodeName === 'BUTTON') {\r\n            _elementRef.nativeElement.setAttribute('type', 'button');\r\n        }\r\n    }\r\n    focus() {\r\n        this._elementRef.nativeElement.focus();\r\n    }\r\n    _handleClick(event) {\r\n        if (!this.disabled && this.isInteractive && this._isPrimary) {\r\n            event.preventDefault();\r\n            this._parentChip._handlePrimaryActionInteraction();\r\n        }\r\n    }\r\n    _handleKeydown(event) {\r\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\r\n            !this.disabled &&\r\n            this.isInteractive &&\r\n            this._isPrimary &&\r\n            !this._parentChip._isEditing) {\r\n            event.preventDefault();\r\n            this._parentChip._handlePrimaryActionInteraction();\r\n        }\r\n    }\r\n}\r\nMatChipAction.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipAction, deps: [{ token: i0.ElementRef }, { token: MAT_CHIP }], target: i0.ɵɵFactoryTarget.Directive });\r\nMatChipAction.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatChipAction, selector: \"[matChipAction]\", inputs: { disabled: \"disabled\", tabIndex: \"tabIndex\", isInteractive: \"isInteractive\", _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\" }, host: { listeners: { \"click\": \"_handleClick($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-evolution-chip__action--primary\": \"_isPrimary\", \"class.mdc-evolution-chip__action--presentational\": \"!isInteractive\", \"class.mdc-evolution-chip__action--trailing\": \"!_isPrimary\", \"attr.tabindex\": \"_getTabindex()\", \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"disabled\" }, classAttribute: \"mdc-evolution-chip__action mat-mdc-chip-action\" }, usesInheritance: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipAction, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[matChipAction]',\r\n                    inputs: ['disabled', 'tabIndex'],\r\n                    host: {\r\n                        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\r\n                        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\r\n                        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\r\n                        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary',\r\n                        '[attr.tabindex]': '_getTabindex()',\r\n                        '[attr.disabled]': '_getDisabledAttribute()',\r\n                        '[attr.aria-disabled]': 'disabled',\r\n                        '(click)': '_handleClick($event)',\r\n                        '(keydown)': '_handleKeydown($event)',\r\n                    },\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [MAT_CHIP]\r\n                }] }]; }, propDecorators: { isInteractive: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input\r\n            }], _allowFocusWhenDisabled: [{\r\n                type: Input\r\n            }] } });\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Avatar image within a chip. */\r\nclass MatChipAvatar {\r\n}\r\nMatChipAvatar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\nMatChipAvatar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatChipAvatar, selector: \"mat-chip-avatar, [matChipAvatar]\", host: { attributes: { \"role\": \"img\" }, classAttribute: \"mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\" }, providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }], ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipAvatar, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'mat-chip-avatar, [matChipAvatar]',\r\n                    host: {\r\n                        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\r\n                        'role': 'img',\r\n                    },\r\n                    providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }],\r\n                }]\r\n        }] });\r\n/** Non-interactive trailing icon in a chip. */\r\nclass MatChipTrailingIcon extends MatChipAction {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * MDC considers all trailing actions as a remove icon,\r\n         * but we support non-interactive trailing icons.\r\n         */\r\n        this.isInteractive = false;\r\n        this._isPrimary = false;\r\n    }\r\n}\r\nMatChipTrailingIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipTrailingIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive });\r\nMatChipTrailingIcon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatChipTrailingIcon, selector: \"mat-chip-trailing-icon, [matChipTrailingIcon]\", host: { attributes: { \"aria-hidden\": \"true\" }, classAttribute: \"mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }], usesInheritance: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipTrailingIcon, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\r\n                    host: {\r\n                        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\r\n                        'aria-hidden': 'true',\r\n                    },\r\n                    providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }],\r\n                }]\r\n        }] });\r\n/**\r\n * Directive to remove the parent chip when the trailing icon is clicked or\r\n * when the ENTER key is pressed on it.\r\n *\r\n * Recommended for use with the Material Design \"cancel\" icon\r\n * available at https://material.io/icons/#ic_cancel.\r\n *\r\n * Example:\r\n *\r\n * ```\r\n * <mat-chip>\r\n *   <mat-icon matChipRemove>cancel</mat-icon>\r\n * </mat-chip>\r\n * ```\r\n */\r\nclass MatChipRemove extends MatChipAction {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._isPrimary = false;\r\n    }\r\n    _handleClick(event) {\r\n        if (!this.disabled) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this._parentChip.remove();\r\n        }\r\n    }\r\n    _handleKeydown(event) {\r\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this._parentChip.remove();\r\n        }\r\n    }\r\n}\r\nMatChipRemove.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipRemove, deps: null, target: i0.ɵɵFactoryTarget.Directive });\r\nMatChipRemove.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatChipRemove, selector: \"[matChipRemove]\", host: { attributes: { \"role\": \"button\" }, properties: { \"attr.aria-hidden\": \"null\" }, classAttribute: \"mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }], usesInheritance: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipRemove, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[matChipRemove]',\r\n                    host: {\r\n                        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator ' +\r\n                            'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\r\n                        'role': 'button',\r\n                        '[attr.aria-hidden]': 'null',\r\n                    },\r\n                    providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }],\r\n                }]\r\n        }] });\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nlet uid = 0;\r\n/**\r\n * Boilerplate for applying mixins to MatChip.\r\n * @docs-private\r\n */\r\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\r\n    constructor(_elementRef) {\r\n        this._elementRef = _elementRef;\r\n    }\r\n})), 'primary'), -1);\r\n/**\r\n * Material design styled Chip base component. Used inside the MatChipSet component.\r\n *\r\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\r\n */\r\nclass MatChip extends _MatChipMixinBase {\r\n    _hasFocus() {\r\n        return this._hasFocusInternal;\r\n    }\r\n    /**\r\n     * The value of the chip. Defaults to the content inside\r\n     * the `mat-mdc-chip-action-label` element.\r\n     */\r\n    get value() {\r\n        return this._value !== undefined ? this._value : this._textElement.textContent.trim();\r\n    }\r\n    set value(value) {\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\r\n     */\r\n    get removable() {\r\n        return this._removable;\r\n    }\r\n    set removable(value) {\r\n        this._removable = coerceBooleanProperty(value);\r\n    }\r\n    /**\r\n     * Colors the chip for emphasis as if it were selected.\r\n     */\r\n    get highlighted() {\r\n        return this._highlighted;\r\n    }\r\n    set highlighted(value) {\r\n        this._highlighted = coerceBooleanProperty(value);\r\n    }\r\n    constructor(_changeDetectorRef, elementRef, _ngZone, _focusMonitor, _document, animationMode, _globalRippleOptions, tabIndex) {\r\n        super(elementRef);\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._ngZone = _ngZone;\r\n        this._focusMonitor = _focusMonitor;\r\n        this._globalRippleOptions = _globalRippleOptions;\r\n        /** Whether the ripple is centered on the chip. */\r\n        this._isRippleCentered = false;\r\n        /** Emits when the chip is focused. */\r\n        this._onFocus = new Subject();\r\n        /** Emits when the chip is blurred. */\r\n        this._onBlur = new Subject();\r\n        /** Role for the root of the chip. */\r\n        this.role = null;\r\n        /** Whether the chip has focus. */\r\n        this._hasFocusInternal = false;\r\n        /** A unique id for the chip. If none is supplied, it will be auto-generated. */\r\n        this.id = `mat-mdc-chip-${uid++}`;\r\n        // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\r\n        // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\r\n        // datepicker's use case.\r\n        /** ARIA label for the content of the chip. */\r\n        this.ariaLabel = null;\r\n        // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\r\n        // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\r\n        // datepicker's use case.\r\n        /** ARIA description for the content of the chip. */\r\n        this.ariaDescription = null;\r\n        /** Id of a span that contains this chip's aria description. */\r\n        this._ariaDescriptionId = `${this.id}-aria-description`;\r\n        this._removable = true;\r\n        this._highlighted = false;\r\n        /** Emitted when a chip is to be removed. */\r\n        this.removed = new EventEmitter();\r\n        /** Emitted when the chip is destroyed. */\r\n        this.destroyed = new EventEmitter();\r\n        /** The unstyled chip selector for this component. */\r\n        this.basicChipAttrName = 'mat-basic-chip';\r\n        this._document = _document;\r\n        this._animationsDisabled = animationMode === 'NoopAnimations';\r\n        if (tabIndex != null) {\r\n            this.tabIndex = parseInt(tabIndex) ?? this.defaultTabIndex;\r\n        }\r\n        this._monitorFocus();\r\n    }\r\n    ngOnInit() {\r\n        // This check needs to happen in `ngOnInit` so the overridden value of\r\n        // `basicChipAttrName` coming from base classes can be picked up.\r\n        const element = this._elementRef.nativeElement;\r\n        this._isBasicChip =\r\n            element.hasAttribute(this.basicChipAttrName) ||\r\n                element.tagName.toLowerCase() === this.basicChipAttrName;\r\n    }\r\n    ngAfterViewInit() {\r\n        this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\r\n        if (this._pendingFocus) {\r\n            this._pendingFocus = false;\r\n            this.focus();\r\n        }\r\n    }\r\n    ngAfterContentInit() {\r\n        // Since the styling depends on the presence of some\r\n        // actions, we have to mark for check on changes.\r\n        this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\r\n    }\r\n    ngOnDestroy() {\r\n        this._focusMonitor.stopMonitoring(this._elementRef);\r\n        this._actionChanges?.unsubscribe();\r\n        this.destroyed.emit({ chip: this });\r\n        this.destroyed.complete();\r\n    }\r\n    /**\r\n     * Allows for programmatic removal of the chip.\r\n     *\r\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\r\n     */\r\n    remove() {\r\n        if (this.removable) {\r\n            this.removed.emit({ chip: this });\r\n        }\r\n    }\r\n    /** Whether or not the ripple should be disabled. */\r\n    _isRippleDisabled() {\r\n        return (this.disabled ||\r\n            this.disableRipple ||\r\n            this._animationsDisabled ||\r\n            this._isBasicChip ||\r\n            !!this._globalRippleOptions?.disabled);\r\n    }\r\n    /** Returns whether the chip has a trailing icon. */\r\n    _hasTrailingIcon() {\r\n        return !!(this.trailingIcon || this.removeIcon);\r\n    }\r\n    /** Handles keyboard events on the chip. */\r\n    _handleKeydown(event) {\r\n        if (event.keyCode === BACKSPACE || event.keyCode === DELETE) {\r\n            event.preventDefault();\r\n            this.remove();\r\n        }\r\n    }\r\n    /** Allows for programmatic focusing of the chip. */\r\n    focus() {\r\n        if (!this.disabled) {\r\n            // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\r\n            // This can happen if the consumer tries to focus a chip immediately after it is added.\r\n            // Queue the method to be called again on init.\r\n            if (this.primaryAction) {\r\n                this.primaryAction.focus();\r\n            }\r\n            else {\r\n                this._pendingFocus = true;\r\n            }\r\n        }\r\n    }\r\n    /** Gets the action that contains a specific target node. */\r\n    _getSourceAction(target) {\r\n        return this._getActions().find(action => {\r\n            const element = action._elementRef.nativeElement;\r\n            return element === target || element.contains(target);\r\n        });\r\n    }\r\n    /** Gets all of the actions within the chip. */\r\n    _getActions() {\r\n        const result = [];\r\n        if (this.primaryAction) {\r\n            result.push(this.primaryAction);\r\n        }\r\n        if (this.removeIcon) {\r\n            result.push(this.removeIcon);\r\n        }\r\n        if (this.trailingIcon) {\r\n            result.push(this.trailingIcon);\r\n        }\r\n        return result;\r\n    }\r\n    /** Handles interactions with the primary action of the chip. */\r\n    _handlePrimaryActionInteraction() {\r\n        // Empty here, but is overwritten in child classes.\r\n    }\r\n    /** Starts the focus monitoring process on the chip. */\r\n    _monitorFocus() {\r\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\r\n            const hasFocus = origin !== null;\r\n            if (hasFocus !== this._hasFocusInternal) {\r\n                this._hasFocusInternal = hasFocus;\r\n                if (hasFocus) {\r\n                    this._onFocus.next({ chip: this });\r\n                }\r\n                else {\r\n                    // When animations are enabled, Angular may end up removing the chip from the DOM a little\r\n                    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\r\n                    // that moves focus not the next item. To work around the issue, we defer marking the chip\r\n                    // as not focused until the next time the zone stabilizes.\r\n                    this._ngZone.onStable\r\n                        .pipe(take(1))\r\n                        .subscribe(() => this._ngZone.run(() => this._onBlur.next({ chip: this })));\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nMatChip.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChip, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i1.FocusMonitor }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\r\nMatChip.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatChip, selector: \"mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]\", inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", role: \"role\", id: \"id\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaDescription: [\"aria-description\", \"ariaDescription\"], value: \"value\", removable: \"removable\", highlighted: \"highlighted\" }, outputs: { removed: \"removed\", destroyed: \"destroyed\" }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-basic-chip\": \"_isBasicChip\", \"class.mat-mdc-standard-chip\": \"!_isBasicChip\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"id\": \"id\", \"attr.role\": \"role\", \"attr.tabindex\": \"role ? tabIndex : null\", \"attr.aria-label\": \"ariaLabel\" }, classAttribute: \"mat-mdc-chip\" }, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], queries: [{ propertyName: \"leadingIcon\", first: true, predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"trailingIcon\", first: true, predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"removeIcon\", first: true, predicate: MAT_CHIP_REMOVE, descendants: true }, { propertyName: \"_allLeadingIcons\", predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"_allTrailingIcons\", predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"_allRemoveIcons\", predicate: MAT_CHIP_REMOVE, descendants: true }], viewQueries: [{ propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }, { propertyName: \"primaryAction\", first: true, predicate: MatChipAction, descendants: true }], exportAs: [\"matChip\"], usesInheritance: true, ngImport: i0, template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"disabled\", \"tabIndex\", \"isInteractive\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChip, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]', inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'], exportAs: 'matChip', host: {\r\n                        'class': 'mat-mdc-chip',\r\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\r\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\r\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\r\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\r\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\r\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\r\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\r\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\r\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\r\n                        '[class.mat-mdc-basic-chip]': '_isBasicChip',\r\n                        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\r\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\r\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\r\n                        '[id]': 'id',\r\n                        '[attr.role]': 'role',\r\n                        '[attr.tabindex]': 'role ? tabIndex : null',\r\n                        '[attr.aria-label]': 'ariaLabel',\r\n                        '(keydown)': '_handleKeydown($event)',\r\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [ANIMATION_MODULE_TYPE]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Attribute,\r\n                    args: ['tabindex']\r\n                }] }]; }, propDecorators: { role: [{\r\n                type: Input\r\n            }], _allLeadingIcons: [{\r\n                type: ContentChildren,\r\n                args: [MAT_CHIP_AVATAR, { descendants: true }]\r\n            }], _allTrailingIcons: [{\r\n                type: ContentChildren,\r\n                args: [MAT_CHIP_TRAILING_ICON, { descendants: true }]\r\n            }], _allRemoveIcons: [{\r\n                type: ContentChildren,\r\n                args: [MAT_CHIP_REMOVE, { descendants: true }]\r\n            }], id: [{\r\n                type: Input\r\n            }], ariaLabel: [{\r\n                type: Input,\r\n                args: ['aria-label']\r\n            }], ariaDescription: [{\r\n                type: Input,\r\n                args: ['aria-description']\r\n            }], value: [{\r\n                type: Input\r\n            }], removable: [{\r\n                type: Input\r\n            }], highlighted: [{\r\n                type: Input\r\n            }], removed: [{\r\n                type: Output\r\n            }], destroyed: [{\r\n                type: Output\r\n            }], leadingIcon: [{\r\n                type: ContentChild,\r\n                args: [MAT_CHIP_AVATAR]\r\n            }], trailingIcon: [{\r\n                type: ContentChild,\r\n                args: [MAT_CHIP_TRAILING_ICON]\r\n            }], removeIcon: [{\r\n                type: ContentChild,\r\n                args: [MAT_CHIP_REMOVE]\r\n            }], ripple: [{\r\n                type: ViewChild,\r\n                args: [MatRipple]\r\n            }], primaryAction: [{\r\n                type: ViewChild,\r\n                args: [MatChipAction]\r\n            }] } });\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Event object emitted by MatChipOption when selected or deselected. */\r\nclass MatChipSelectionChange {\r\n    constructor(\r\n    /** Reference to the chip that emitted the event. */\r\n    source, \r\n    /** Whether the chip that emitted the event is selected. */\r\n    selected, \r\n    /** Whether the selection change was a result of a user interaction. */\r\n    isUserInput = false) {\r\n        this.source = source;\r\n        this.selected = selected;\r\n        this.isUserInput = isUserInput;\r\n    }\r\n}\r\n/**\r\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\r\n *\r\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\r\n * user cannot click disabled chips.\r\n */\r\nclass MatChipOption extends MatChip {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Default chip options. */\r\n        this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\r\n        /** Whether the chip list is selectable. */\r\n        this.chipListSelectable = true;\r\n        /** Whether the chip list is in multi-selection mode. */\r\n        this._chipListMultiple = false;\r\n        /** Whether the chip list hides single-selection indicator. */\r\n        this._chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\r\n        this._selectable = true;\r\n        this._selected = false;\r\n        /** The unstyled chip selector for this component. */\r\n        this.basicChipAttrName = 'mat-basic-chip-option';\r\n        /** Emitted when the chip is selected or deselected. */\r\n        this.selectionChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * Whether or not the chip is selectable.\r\n     *\r\n     * When a chip is not selectable, changes to its selected state are always\r\n     * ignored. By default an option chip is selectable, and it becomes\r\n     * non-selectable if its parent chip list is not selectable.\r\n     */\r\n    get selectable() {\r\n        return this._selectable && this.chipListSelectable;\r\n    }\r\n    set selectable(value) {\r\n        this._selectable = coerceBooleanProperty(value);\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /** Whether the chip is selected. */\r\n    get selected() {\r\n        return this._selected;\r\n    }\r\n    set selected(value) {\r\n        this._setSelectedState(coerceBooleanProperty(value), false, true);\r\n    }\r\n    /**\r\n     * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\r\n     * interaction patterns.\r\n     *\r\n     * From [WAI ARIA Listbox authoring practices guide](\r\n     * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\r\n     *  \"If any options are selected, each selected option has either aria-selected or aria-checked\r\n     *  set to true. All options that are selectable but not selected have either aria-selected or\r\n     *  aria-checked set to false.\"\r\n     *\r\n     * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\r\n     * VoiceOver reading every option as \"selected\" (#25736).\r\n     */\r\n    get ariaSelected() {\r\n        return this.selectable ? this.selected.toString() : null;\r\n    }\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.role = 'presentation';\r\n    }\r\n    /** Selects the chip. */\r\n    select() {\r\n        this._setSelectedState(true, false, true);\r\n    }\r\n    /** Deselects the chip. */\r\n    deselect() {\r\n        this._setSelectedState(false, false, true);\r\n    }\r\n    /** Selects this chip and emits userInputSelection event */\r\n    selectViaInteraction() {\r\n        this._setSelectedState(true, true, true);\r\n    }\r\n    /** Toggles the current selected state of this chip. */\r\n    toggleSelected(isUserInput = false) {\r\n        this._setSelectedState(!this.selected, isUserInput, true);\r\n        return this.selected;\r\n    }\r\n    _handlePrimaryActionInteraction() {\r\n        if (this.selectable && !this.disabled) {\r\n            this.toggleSelected(true);\r\n        }\r\n    }\r\n    _hasLeadingGraphic() {\r\n        if (this.leadingIcon) {\r\n            return true;\r\n        }\r\n        // The checkmark graphic communicates selected state for both single-select and multi-select.\r\n        // Include checkmark in single-select to fix a11y issue where selected state is communicated\r\n        // visually only using color (#25886).\r\n        return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\r\n    }\r\n    _setSelectedState(isSelected, isUserInput, emitEvent) {\r\n        if (isSelected !== this.selected) {\r\n            this._selected = isSelected;\r\n            if (emitEvent) {\r\n                this.selectionChange.emit({\r\n                    source: this,\r\n                    isUserInput,\r\n                    selected: this.selected,\r\n                });\r\n            }\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n}\r\nMatChipOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipOption, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\nMatChipOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatChipOption, selector: \"mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]\", inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selectable: \"selectable\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, host: { properties: { \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--filter\": \"!_isBasicChip\", \"class.mdc-evolution-chip--selectable\": \"!_isBasicChip\", \"class.mat-mdc-chip-selected\": \"selected\", \"class.mat-mdc-chip-multiple\": \"_chipListMultiple\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--selected\": \"selected\", \"class.mdc-evolution-chip--selecting\": \"!_animationsDisabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-graphic\": \"_hasLeadingGraphic()\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\", \"id\": \"id\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-option\" }, providers: [\r\n        { provide: MatChip, useExisting: MatChipOption },\r\n        { provide: MAT_CHIP, useExisting: MatChipOption },\r\n    ], usesInheritance: true, ngImport: i0, template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"_hasLeadingGraphic()\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n        <svg class=\\\"mdc-evolution-chip__checkmark-svg\\\" viewBox=\\\"-2 -3 30 30\\\" focusable=\\\"false\\\">\\n          <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n        </svg>\\n      </span>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"disabled\", \"tabIndex\", \"isInteractive\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipOption, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]', inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'], host: {\r\n                        'class': 'mat-mdc-chip mat-mdc-chip-option',\r\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\r\n                        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\r\n                        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\r\n                        '[class.mat-mdc-chip-selected]': 'selected',\r\n                        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\r\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\r\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\r\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\r\n                        '[class.mdc-evolution-chip--selected]': 'selected',\r\n                        // This class enables the transition on the checkmark. Usually MDC adds it when selection\r\n                        // starts and removes it once the animation is finished. We don't need to go through all\r\n                        // the trouble, because we only care about the selection animation. MDC needs to do it,\r\n                        // because they also have an exit animation that we don't care about.\r\n                        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\r\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\r\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\r\n                        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\r\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\r\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\r\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\r\n                        '[attr.tabindex]': 'null',\r\n                        '[attr.aria-label]': 'null',\r\n                        '[attr.aria-description]': 'null',\r\n                        '[attr.role]': 'role',\r\n                        '[id]': 'id',\r\n                    }, providers: [\r\n                        { provide: MatChip, useExisting: MatChipOption },\r\n                        { provide: MAT_CHIP, useExisting: MatChipOption },\r\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"_isRippleCentered\\\"\\n     [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"_hasLeadingGraphic()\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n        <svg class=\\\"mdc-evolution-chip__checkmark-svg\\\" viewBox=\\\"-2 -3 30 30\\\" focusable=\\\"false\\\">\\n          <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n        </svg>\\n      </span>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\r\n        }], propDecorators: { selectable: [{\r\n                type: Input\r\n            }], selected: [{\r\n                type: Input\r\n            }], selectionChange: [{\r\n                type: Output\r\n            }] } });\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * A directive that makes a span editable and exposes functions to modify and retrieve the\r\n * element's contents.\r\n */\r\nclass MatChipEditInput {\r\n    constructor(_elementRef, _document) {\r\n        this._elementRef = _elementRef;\r\n        this._document = _document;\r\n    }\r\n    initialize(initialValue) {\r\n        this.getNativeElement().focus();\r\n        this.setValue(initialValue);\r\n    }\r\n    getNativeElement() {\r\n        return this._elementRef.nativeElement;\r\n    }\r\n    setValue(value) {\r\n        this.getNativeElement().textContent = value;\r\n        this._moveCursorToEndOfInput();\r\n    }\r\n    getValue() {\r\n        return this.getNativeElement().textContent || '';\r\n    }\r\n    _moveCursorToEndOfInput() {\r\n        const range = this._document.createRange();\r\n        range.selectNodeContents(this.getNativeElement());\r\n        range.collapse(false);\r\n        const sel = window.getSelection();\r\n        sel.removeAllRanges();\r\n        sel.addRange(range);\r\n    }\r\n}\r\nMatChipEditInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipEditInput, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\nMatChipEditInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatChipEditInput, selector: \"span[matChipEditInput]\", host: { attributes: { \"role\": \"textbox\", \"tabindex\": \"-1\", \"contenteditable\": \"true\" }, classAttribute: \"mat-chip-edit-input\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipEditInput, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'span[matChipEditInput]',\r\n                    host: {\r\n                        'class': 'mat-chip-edit-input',\r\n                        'role': 'textbox',\r\n                        'tabindex': '-1',\r\n                        'contenteditable': 'true',\r\n                    },\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }]; } });\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * An extension of the MatChip component used with MatChipGrid and\r\n * the matChipInputFor directive.\r\n */\r\nclass MatChipRow extends MatChip {\r\n    constructor(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex) {\r\n        super(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex);\r\n        this.basicChipAttrName = 'mat-basic-chip-row';\r\n        /**\r\n         * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\r\n         * event might occur which will interrupt the editing. This flag is used to avoid interruptions\r\n         * while the editing action is being initialized.\r\n         */\r\n        this._editStartPending = false;\r\n        this.editable = false;\r\n        /** Emitted when the chip is edited. */\r\n        this.edited = new EventEmitter();\r\n        this._isEditing = false;\r\n        this.role = 'row';\r\n        this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\r\n            if (this._isEditing && !this._editStartPending) {\r\n                this._onEditFinish();\r\n            }\r\n        });\r\n    }\r\n    _hasTrailingIcon() {\r\n        // The trailing icon is hidden while editing.\r\n        return !this._isEditing && super._hasTrailingIcon();\r\n    }\r\n    /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\r\n    _handleFocus() {\r\n        if (!this._isEditing && !this.disabled) {\r\n            this.focus();\r\n        }\r\n    }\r\n    _handleKeydown(event) {\r\n        if (event.keyCode === ENTER && !this.disabled) {\r\n            if (this._isEditing) {\r\n                event.preventDefault();\r\n                this._onEditFinish();\r\n            }\r\n            else if (this.editable) {\r\n                this._startEditing(event);\r\n            }\r\n        }\r\n        else if (this._isEditing) {\r\n            // Stop the event from reaching the chip set in order to avoid navigating.\r\n            event.stopPropagation();\r\n        }\r\n        else {\r\n            super._handleKeydown(event);\r\n        }\r\n    }\r\n    _handleDoubleclick(event) {\r\n        if (!this.disabled && this.editable) {\r\n            this._startEditing(event);\r\n        }\r\n    }\r\n    _startEditing(event) {\r\n        if (!this.primaryAction ||\r\n            (this.removeIcon && this._getSourceAction(event.target) === this.removeIcon)) {\r\n            return;\r\n        }\r\n        // The value depends on the DOM so we need to extract it before we flip the flag.\r\n        const value = this.value;\r\n        this._isEditing = true;\r\n        this._editStartPending = true;\r\n        // Defer initializing the input so it has time to be added to the DOM.\r\n        setTimeout(() => {\r\n            this._getEditInput().initialize(value);\r\n            this._editStartPending = false;\r\n        });\r\n    }\r\n    _onEditFinish() {\r\n        this._isEditing = false;\r\n        this._editStartPending = false;\r\n        this.edited.emit({ chip: this, value: this._getEditInput().getValue() });\r\n        // If the edit input is still focused or focus was returned to the body after it was destroyed,\r\n        // return focus to the chip contents.\r\n        if (this._document.activeElement === this._getEditInput().getNativeElement() ||\r\n            this._document.activeElement === this._document.body) {\r\n            this.primaryAction.focus();\r\n        }\r\n    }\r\n    /**\r\n     * Gets the projected chip edit input, or the default input if none is projected in. One of these\r\n     * two values is guaranteed to be defined.\r\n     */\r\n    _getEditInput() {\r\n        return this.contentEditInput || this.defaultEditInput;\r\n    }\r\n}\r\nMatChipRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipRow, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i1.FocusMonitor }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\r\nMatChipRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatChipRow, selector: \"mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]\", inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", editable: \"editable\" }, outputs: { edited: \"edited\" }, host: { listeners: { \"focus\": \"_handleFocus($event)\", \"dblclick\": \"_handleDoubleclick($event)\" }, properties: { \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-editing\": \"_isEditing\", \"class.mat-mdc-chip-editable\": \"editable\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"id\": \"id\", \"attr.tabindex\": \"disabled ? null : -1\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip\" }, providers: [\r\n        { provide: MatChip, useExisting: MatChipRow },\r\n        { provide: MAT_CHIP, useExisting: MatChipRow },\r\n    ], queries: [{ propertyName: \"contentEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], viewQueries: [{ propertyName: \"defaultEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"!_isEditing\\\">\\n  <span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n       [matRippleCentered]=\\\"_isRippleCentered\\\"\\n       [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n</ng-container>\\n\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\">\\n  <span\\n    matChipAction\\n    [attr.role]=\\\"editable ? 'button' : null\\\"\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\" [ngSwitch]=\\\"_isEditing\\\">\\n      <ng-container *ngSwitchCase=\\\"false\\\"><ng-content></ng-content></ng-container>\\n\\n      <ng-container *ngSwitchCase=\\\"true\\\">\\n        <ng-content *ngIf=\\\"contentEditInput; else defaultMatChipEditInput\\\"\\n                    select=\\\"[matChipEditInput]\\\"></ng-content>\\n        <ng-template #defaultMatChipEditInput><span matChipEditInput></span></ng-template>\\n      </ng-container>\\n\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  role=\\\"gridcell\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"disabled\", \"tabIndex\", \"isInteractive\", \"_allowFocusWhenDisabled\"] }, { kind: \"directive\", type: MatChipEditInput, selector: \"span[matChipEditInput]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipRow, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]', inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'], host: {\r\n                        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\r\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\r\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\r\n                        '[class.mat-mdc-chip-editing]': '_isEditing',\r\n                        '[class.mat-mdc-chip-editable]': 'editable',\r\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\r\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\r\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\r\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\r\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\r\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\r\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\r\n                        '[id]': 'id',\r\n                        // Has to have a negative tabindex in order to capture\r\n                        // focus and redirect it to the primary action.\r\n                        '[attr.tabindex]': 'disabled ? null : -1',\r\n                        '[attr.aria-label]': 'null',\r\n                        '[attr.aria-description]': 'null',\r\n                        '[attr.role]': 'role',\r\n                        '(focus)': '_handleFocus($event)',\r\n                        '(dblclick)': '_handleDoubleclick($event)',\r\n                    }, providers: [\r\n                        { provide: MatChip, useExisting: MatChipRow },\r\n                        { provide: MAT_CHIP, useExisting: MatChipRow },\r\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container *ngIf=\\\"!_isEditing\\\">\\n  <span matRipple class=\\\"mat-mdc-chip-ripple\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n       [matRippleCentered]=\\\"_isRippleCentered\\\"\\n       [matRippleTrigger]=\\\"_elementRef.nativeElement\\\"></span>\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n</ng-container>\\n\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\">\\n  <span\\n    matChipAction\\n    [attr.role]=\\\"editable ? 'button' : null\\\"\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\" [ngSwitch]=\\\"_isEditing\\\">\\n      <ng-container *ngSwitchCase=\\\"false\\\"><ng-content></ng-content></ng-container>\\n\\n      <ng-container *ngSwitchCase=\\\"true\\\">\\n        <ng-content *ngIf=\\\"contentEditInput; else defaultMatChipEditInput\\\"\\n                    select=\\\"[matChipEditInput]\\\"></ng-content>\\n        <ng-template #defaultMatChipEditInput><span matChipEditInput></span></ng-template>\\n      </ng-container>\\n\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  role=\\\"gridcell\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__graphic{height:24px;width:24px;font-size:24px}.mdc-evolution-chip--with-avatar .mdc-evolution-chip__icon--primary{height:24px;width:24px;font-size:24px}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius, 16px 16px 16px 16px)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 14px 14px 14px 14px)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size, 28px);width:var(--mdc-chip-with-avatar-avatar-size, 28px);font-size:var(--mdc-chip-with-avatar-avatar-size, 28px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width, 1px)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-outline-width, 1px)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--selected) .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-unselected-outline-width, 1px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color, transparent)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, currentColor)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size, 18px);width:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, currentColor)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, currentColor)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, currentColor)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{width:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [ANIMATION_MODULE_TYPE]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Attribute,\r\n                    args: ['tabindex']\r\n                }] }]; }, propDecorators: { editable: [{\r\n                type: Input\r\n            }], edited: [{\r\n                type: Output\r\n            }], defaultEditInput: [{\r\n                type: ViewChild,\r\n                args: [MatChipEditInput]\r\n            }], contentEditInput: [{\r\n                type: ContentChild,\r\n                args: [MatChipEditInput]\r\n            }] } });\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Boilerplate for applying mixins to MatChipSet.\r\n * @docs-private\r\n */\r\nclass MatChipSetBase {\r\n    constructor(_elementRef) { }\r\n}\r\nconst _MatChipSetMixinBase = mixinTabIndex(MatChipSetBase);\r\n/**\r\n * Basic container component for the MatChip component.\r\n *\r\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\r\n */\r\nclass MatChipSet extends _MatChipSetMixinBase {\r\n    /** Combined stream of all of the child chips' focus events. */\r\n    get chipFocusChanges() {\r\n        return this._getChipStream(chip => chip._onFocus);\r\n    }\r\n    /** Combined stream of all of the child chips' remove events. */\r\n    get chipDestroyedChanges() {\r\n        return this._getChipStream(chip => chip.destroyed);\r\n    }\r\n    /** Whether the chip set is disabled. */\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n        this._syncChipsState();\r\n    }\r\n    /** Whether the chip list contains chips or not. */\r\n    get empty() {\r\n        return this._chips.length === 0;\r\n    }\r\n    /** The ARIA role applied to the chip set. */\r\n    get role() {\r\n        if (this._explicitRole) {\r\n            return this._explicitRole;\r\n        }\r\n        return this.empty ? null : this._defaultRole;\r\n    }\r\n    set role(value) {\r\n        this._explicitRole = value;\r\n    }\r\n    /** Whether any of the chips inside of this chip-set has focus. */\r\n    get focused() {\r\n        return this._hasFocusedChip();\r\n    }\r\n    constructor(_elementRef, _changeDetectorRef, _dir) {\r\n        super(_elementRef);\r\n        this._elementRef = _elementRef;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._dir = _dir;\r\n        /** Index of the last destroyed chip that had focus. */\r\n        this._lastDestroyedFocusedChipIndex = null;\r\n        /** Subject that emits when the component has been destroyed. */\r\n        this._destroyed = new Subject();\r\n        /** Role to use if it hasn't been overwritten by the user. */\r\n        this._defaultRole = 'presentation';\r\n        this._disabled = false;\r\n        this._explicitRole = null;\r\n        /** Flat list of all the actions contained within the chips. */\r\n        this._chipActions = new QueryList();\r\n    }\r\n    ngAfterViewInit() {\r\n        this._setUpFocusManagement();\r\n        this._trackChipSetChanges();\r\n        this._trackDestroyedFocusedChip();\r\n    }\r\n    ngOnDestroy() {\r\n        this._keyManager?.destroy();\r\n        this._chipActions.destroy();\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n    }\r\n    /** Checks whether any of the chips is focused. */\r\n    _hasFocusedChip() {\r\n        return this._chips && this._chips.some(chip => chip._hasFocus());\r\n    }\r\n    /** Syncs the chip-set's state with the individual chips. */\r\n    _syncChipsState() {\r\n        if (this._chips) {\r\n            this._chips.forEach(chip => {\r\n                chip.disabled = this._disabled;\r\n                chip._changeDetectorRef.markForCheck();\r\n            });\r\n        }\r\n    }\r\n    /** Dummy method for subclasses to override. Base chip set cannot be focused. */\r\n    focus() { }\r\n    /** Handles keyboard events on the chip set. */\r\n    _handleKeydown(event) {\r\n        if (this._originatesFromChip(event)) {\r\n            this._keyManager.onKeydown(event);\r\n        }\r\n    }\r\n    /**\r\n     * Utility to ensure all indexes are valid.\r\n     *\r\n     * @param index The index to be checked.\r\n     * @returns True if the index is valid for our list of chips.\r\n     */\r\n    _isValidIndex(index) {\r\n        return index >= 0 && index < this._chips.length;\r\n    }\r\n    /**\r\n     * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\r\n     * user to tab out of it. This prevents the set from capturing focus and redirecting\r\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\r\n     */\r\n    _allowFocusEscape() {\r\n        if (this.tabIndex !== -1) {\r\n            const previousTabIndex = this.tabIndex;\r\n            this.tabIndex = -1;\r\n            // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\r\n            // doesn't allow enough time for the focus to escape.\r\n            setTimeout(() => (this.tabIndex = previousTabIndex));\r\n        }\r\n    }\r\n    /**\r\n     * Gets a stream of events from all the chips within the set.\r\n     * The stream will automatically incorporate any newly-added chips.\r\n     */\r\n    _getChipStream(mappingFunction) {\r\n        return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\r\n    }\r\n    /** Checks whether an event comes from inside a chip element. */\r\n    _originatesFromChip(event) {\r\n        let currentElement = event.target;\r\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\r\n            if (currentElement.classList.contains('mat-mdc-chip')) {\r\n                return true;\r\n            }\r\n            currentElement = currentElement.parentElement;\r\n        }\r\n        return false;\r\n    }\r\n    /** Sets up the chip set's focus management logic. */\r\n    _setUpFocusManagement() {\r\n        // Create a flat `QueryList` containing the actions of all of the chips.\r\n        // This allows us to navigate both within the chip and move to the next/previous\r\n        // one using the existing `ListKeyManager`.\r\n        this._chips.changes.pipe(startWith(this._chips)).subscribe((chips) => {\r\n            const actions = [];\r\n            chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\r\n            this._chipActions.reset(actions);\r\n            this._chipActions.notifyOnChanges();\r\n        });\r\n        this._keyManager = new FocusKeyManager(this._chipActions)\r\n            .withVerticalOrientation()\r\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr')\r\n            .withHomeAndEnd()\r\n            .skipPredicate(action => this._skipPredicate(action));\r\n        // Keep the manager active index in sync so that navigation picks\r\n        // up from the current chip if the user clicks into the list directly.\r\n        this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({ chip }) => {\r\n            const action = chip._getSourceAction(document.activeElement);\r\n            if (action) {\r\n                this._keyManager.updateActiveItem(action);\r\n            }\r\n        });\r\n        this._dir?.change\r\n            .pipe(takeUntil(this._destroyed))\r\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\r\n    }\r\n    /**\r\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\r\n     * non-interactive and disabled actions since the user can't do anything with them.\r\n     */\r\n    _skipPredicate(action) {\r\n        // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\r\n        // chips.\r\n        return !action.isInteractive || action.disabled;\r\n    }\r\n    /** Listens to changes in the chip set and syncs up the state of the individual chips. */\r\n    _trackChipSetChanges() {\r\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\r\n            if (this.disabled) {\r\n                // Since this happens after the content has been\r\n                // checked, we need to defer it to the next tick.\r\n                Promise.resolve().then(() => this._syncChipsState());\r\n            }\r\n            this._redirectDestroyedChipFocus();\r\n        });\r\n    }\r\n    /** Starts tracking the destroyed chips in order to capture the focused one. */\r\n    _trackDestroyedFocusedChip() {\r\n        this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe((event) => {\r\n            const chipArray = this._chips.toArray();\r\n            const chipIndex = chipArray.indexOf(event.chip);\r\n            // If the focused chip is destroyed, save its index so that we can move focus to the next\r\n            // chip. We only save the index here, rather than move the focus immediately, because we want\r\n            // to wait until the chip is removed from the chip list before focusing the next one. This\r\n            // allows us to keep focus on the same index if the chip gets swapped out.\r\n            if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\r\n                this._lastDestroyedFocusedChipIndex = chipIndex;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Finds the next appropriate chip to move focus to,\r\n     * if the currently-focused chip is destroyed.\r\n     */\r\n    _redirectDestroyedChipFocus() {\r\n        if (this._lastDestroyedFocusedChipIndex == null) {\r\n            return;\r\n        }\r\n        if (this._chips.length) {\r\n            const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\r\n            const chipToFocus = this._chips.toArray()[newIndex];\r\n            if (chipToFocus.disabled) {\r\n                // If we're down to one disabled chip, move focus back to the set.\r\n                if (this._chips.length === 1) {\r\n                    this.focus();\r\n                }\r\n                else {\r\n                    this._keyManager.setPreviousItemActive();\r\n                }\r\n            }\r\n            else {\r\n                chipToFocus.focus();\r\n            }\r\n        }\r\n        else {\r\n            this.focus();\r\n        }\r\n        this._lastDestroyedFocusedChipIndex = null;\r\n    }\r\n}\r\nMatChipSet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipSet, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\r\nMatChipSet.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatChipSet, selector: \"mat-chip-set\", inputs: { disabled: \"disabled\", role: \"role\" }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip-set mdc-evolution-chip-set\" }, queries: [{ propertyName: \"_chips\", predicate: MatChip, descendants: true }], usesInheritance: true, ngImport: i0, template: `\r\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `, isInline: true, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipSet, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'mat-chip-set', template: `\r\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `, host: {\r\n                        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\r\n                        '(keydown)': '_handleKeydown($event)',\r\n                        '[attr.role]': 'role',\r\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{\r\n                    type: Optional\r\n                }] }]; }, propDecorators: { disabled: [{\r\n                type: Input\r\n            }], role: [{\r\n                type: Input\r\n            }], _chips: [{\r\n                type: ContentChildren,\r\n                args: [MatChip, {\r\n                        // We need to use `descendants: true`, because Ivy will no longer match\r\n                        // indirect descendants if it's left as false.\r\n                        descendants: true,\r\n                    }]\r\n            }] } });\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Change event object that is emitted when the chip listbox value has changed. */\r\nclass MatChipListboxChange {\r\n    constructor(\r\n    /** Chip listbox that emitted the event. */\r\n    source, \r\n    /** Value of the chip listbox when the event was emitted. */\r\n    value) {\r\n        this.source = source;\r\n        this.value = value;\r\n    }\r\n}\r\n/**\r\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\r\n * This allows it to support [(ngModel)].\r\n * @docs-private\r\n */\r\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => MatChipListbox),\r\n    multi: true,\r\n};\r\n/**\r\n * An extension of the MatChipSet component that supports chip selection.\r\n * Used with MatChipOption chips.\r\n */\r\nclass MatChipListbox extends MatChipSet {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Function when touched. Set as part of ControlValueAccessor implementation.\r\n         * @docs-private\r\n         */\r\n        this._onTouched = () => { };\r\n        /**\r\n         * Function when changed. Set as part of ControlValueAccessor implementation.\r\n         * @docs-private\r\n         */\r\n        this._onChange = () => { };\r\n        // TODO: MDC uses `grid` here\r\n        this._defaultRole = 'listbox';\r\n        /** Default chip options. */\r\n        this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\r\n        this._multiple = false;\r\n        /** Orientation of the chip list. */\r\n        this.ariaOrientation = 'horizontal';\r\n        this._selectable = true;\r\n        /**\r\n         * A function to compare the option values with the selected values. The first argument\r\n         * is a value from an option. The second is a value from the selection. A boolean\r\n         * should be returned.\r\n         */\r\n        this.compareWith = (o1, o2) => o1 === o2;\r\n        this._required = false;\r\n        this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\r\n        /** Event emitted when the selected chip listbox value has been changed by the user. */\r\n        this.change = new EventEmitter();\r\n    }\r\n    /** Whether the user should be allowed to select multiple chips. */\r\n    get multiple() {\r\n        return this._multiple;\r\n    }\r\n    set multiple(value) {\r\n        this._multiple = coerceBooleanProperty(value);\r\n        this._syncListboxProperties();\r\n    }\r\n    /** The array of selected chips inside the chip listbox. */\r\n    get selected() {\r\n        const selectedChips = this._chips.toArray().filter(chip => chip.selected);\r\n        return this.multiple ? selectedChips : selectedChips[0];\r\n    }\r\n    /**\r\n     * Whether or not this chip listbox is selectable.\r\n     *\r\n     * When a chip listbox is not selectable, the selected states for all\r\n     * the chips inside the chip listbox are always ignored.\r\n     */\r\n    get selectable() {\r\n        return this._selectable;\r\n    }\r\n    set selectable(value) {\r\n        this._selectable = coerceBooleanProperty(value);\r\n        this._syncListboxProperties();\r\n    }\r\n    /** Whether this chip listbox is required. */\r\n    get required() {\r\n        return this._required;\r\n    }\r\n    set required(value) {\r\n        this._required = coerceBooleanProperty(value);\r\n    }\r\n    /** Whether checkmark indicator for single-selection options is hidden. */\r\n    get hideSingleSelectionIndicator() {\r\n        return this._hideSingleSelectionIndicator;\r\n    }\r\n    set hideSingleSelectionIndicator(value) {\r\n        this._hideSingleSelectionIndicator = coerceBooleanProperty(value);\r\n        this._syncListboxProperties();\r\n    }\r\n    /** Combined stream of all of the child chips' selection change events. */\r\n    get chipSelectionChanges() {\r\n        return this._getChipStream(chip => chip.selectionChange);\r\n    }\r\n    /** Combined stream of all of the child chips' blur events. */\r\n    get chipBlurChanges() {\r\n        return this._getChipStream(chip => chip._onBlur);\r\n    }\r\n    /** The value of the listbox, which is the combined value of the selected chips. */\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    set value(value) {\r\n        this.writeValue(value);\r\n        this._value = value;\r\n    }\r\n    ngAfterContentInit() {\r\n        if (this._pendingInitialValue !== undefined) {\r\n            Promise.resolve().then(() => {\r\n                this._setSelectionByValue(this._pendingInitialValue, false);\r\n                this._pendingInitialValue = undefined;\r\n            });\r\n        }\r\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\r\n            // Update listbox selectable/multiple properties on chips\r\n            this._syncListboxProperties();\r\n        });\r\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\r\n        this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\r\n            if (!this.multiple) {\r\n                this._chips.forEach(chip => {\r\n                    if (chip !== event.source) {\r\n                        chip._setSelectedState(false, false, false);\r\n                    }\r\n                });\r\n            }\r\n            if (event.isUserInput) {\r\n                this._propagateChanges();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\r\n     * are no selected chips.\r\n     */\r\n    focus() {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        const firstSelectedChip = this._getFirstSelectedChip();\r\n        if (firstSelectedChip && !firstSelectedChip.disabled) {\r\n            firstSelectedChip.focus();\r\n        }\r\n        else if (this._chips.length > 0) {\r\n            this._keyManager.setFirstItemActive();\r\n        }\r\n        else {\r\n            this._elementRef.nativeElement.focus();\r\n        }\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    writeValue(value) {\r\n        if (this._chips) {\r\n            this._setSelectionByValue(value, false);\r\n        }\r\n        else if (value != null) {\r\n            this._pendingInitialValue = value;\r\n        }\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    registerOnChange(fn) {\r\n        this._onChange = fn;\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    registerOnTouched(fn) {\r\n        this._onTouched = fn;\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n    }\r\n    /** Selects all chips with value. */\r\n    _setSelectionByValue(value, isUserInput = true) {\r\n        this._clearSelection();\r\n        if (Array.isArray(value)) {\r\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\r\n        }\r\n        else {\r\n            this._selectValue(value, isUserInput);\r\n        }\r\n    }\r\n    /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\r\n    _blur() {\r\n        if (!this.disabled) {\r\n            // Wait to see if focus moves to an individual chip.\r\n            setTimeout(() => {\r\n                if (!this.focused) {\r\n                    this._propagateChanges();\r\n                    this._markAsTouched();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _keydown(event) {\r\n        if (event.keyCode === TAB) {\r\n            super._allowFocusEscape();\r\n        }\r\n    }\r\n    /** Marks the field as touched */\r\n    _markAsTouched() {\r\n        this._onTouched();\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /** Emits change event to set the model value. */\r\n    _propagateChanges() {\r\n        let valueToEmit = null;\r\n        if (Array.isArray(this.selected)) {\r\n            valueToEmit = this.selected.map(chip => chip.value);\r\n        }\r\n        else {\r\n            valueToEmit = this.selected ? this.selected.value : undefined;\r\n        }\r\n        this._value = valueToEmit;\r\n        this.change.emit(new MatChipListboxChange(this, valueToEmit));\r\n        this._onChange(valueToEmit);\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /**\r\n     * Deselects every chip in the listbox.\r\n     * @param skip Chip that should not be deselected.\r\n     */\r\n    _clearSelection(skip) {\r\n        this._chips.forEach(chip => {\r\n            if (chip !== skip) {\r\n                chip.deselect();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Finds and selects the chip based on its value.\r\n     * @returns Chip that has the corresponding value.\r\n     */\r\n    _selectValue(value, isUserInput) {\r\n        const correspondingChip = this._chips.find(chip => {\r\n            return chip.value != null && this.compareWith(chip.value, value);\r\n        });\r\n        if (correspondingChip) {\r\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\r\n        }\r\n        return correspondingChip;\r\n    }\r\n    /** Syncs the chip-listbox selection state with the individual chips. */\r\n    _syncListboxProperties() {\r\n        if (this._chips) {\r\n            // Defer setting the value in order to avoid the \"Expression\r\n            // has changed after it was checked\" errors from Angular.\r\n            Promise.resolve().then(() => {\r\n                this._chips.forEach(chip => {\r\n                    chip._chipListMultiple = this.multiple;\r\n                    chip.chipListSelectable = this._selectable;\r\n                    chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\r\n                    chip._changeDetectorRef.markForCheck();\r\n                });\r\n            });\r\n        }\r\n    }\r\n    /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\r\n    _getFirstSelectedChip() {\r\n        if (Array.isArray(this.selected)) {\r\n            return this.selected.length ? this.selected[0] : undefined;\r\n        }\r\n        else {\r\n            return this.selected;\r\n        }\r\n    }\r\n    /**\r\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\r\n     * non-interactive actions since the user can't do anything with them.\r\n     */\r\n    _skipPredicate(action) {\r\n        // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\r\n        // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\r\n        // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\r\n        // exceptions for compound widgets.\r\n        //\r\n        // From [Developing a Keyboard Interface](\r\n        // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\r\n        //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\r\n        //   Listbox...\"\r\n        return !action.isInteractive;\r\n    }\r\n}\r\nMatChipListbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipListbox, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\nMatChipListbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatChipListbox, selector: \"mat-chip-listbox\", inputs: { tabIndex: \"tabIndex\", multiple: \"multiple\", ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], selectable: \"selectable\", compareWith: \"compareWith\", required: \"required\", hideSingleSelectionIndicator: \"hideSingleSelectionIndicator\", value: \"value\" }, outputs: { change: \"change\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.role\": \"role\", \"tabIndex\": \"empty ? -1 : tabIndex\", \"attr.aria-describedby\": \"_ariaDescribedby || null\", \"attr.aria-required\": \"role ? required : null\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-orientation\": \"ariaOrientation\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mdc-evolution-chip-set mat-mdc-chip-listbox\" }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], queries: [{ propertyName: \"_chips\", predicate: MatChipOption, descendants: true }], usesInheritance: true, ngImport: i0, template: `\r\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `, isInline: true, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipListbox, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'mat-chip-listbox', template: `\r\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `, inputs: ['tabIndex'], host: {\r\n                        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\r\n                        '[attr.role]': 'role',\r\n                        '[tabIndex]': 'empty ? -1 : tabIndex',\r\n                        // TODO: replace this binding with use of AriaDescriber\r\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\r\n                        '[attr.aria-required]': 'role ? required : null',\r\n                        '[attr.aria-disabled]': 'disabled.toString()',\r\n                        '[attr.aria-multiselectable]': 'multiple',\r\n                        '[attr.aria-orientation]': 'ariaOrientation',\r\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\r\n                        '[class.mat-mdc-chip-list-required]': 'required',\r\n                        '(focus)': 'focus()',\r\n                        '(blur)': '_blur()',\r\n                        '(keydown)': '_keydown($event)',\r\n                    }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"] }]\r\n        }], propDecorators: { multiple: [{\r\n                type: Input\r\n            }], ariaOrientation: [{\r\n                type: Input,\r\n                args: ['aria-orientation']\r\n            }], selectable: [{\r\n                type: Input\r\n            }], compareWith: [{\r\n                type: Input\r\n            }], required: [{\r\n                type: Input\r\n            }], hideSingleSelectionIndicator: [{\r\n                type: Input\r\n            }], value: [{\r\n                type: Input\r\n            }], change: [{\r\n                type: Output\r\n            }], _chips: [{\r\n                type: ContentChildren,\r\n                args: [MatChipOption, {\r\n                        // We need to use `descendants: true`, because Ivy will no longer match\r\n                        // indirect descendants if it's left as false.\r\n                        descendants: true,\r\n                    }]\r\n            }] } });\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Change event object that is emitted when the chip grid value has changed. */\r\nclass MatChipGridChange {\r\n    constructor(\r\n    /** Chip grid that emitted the event. */\r\n    source, \r\n    /** Value of the chip grid when the event was emitted. */\r\n    value) {\r\n        this.source = source;\r\n        this.value = value;\r\n    }\r\n}\r\n/**\r\n * Boilerplate for applying mixins to MatChipGrid.\r\n * @docs-private\r\n */\r\nclass MatChipGridBase extends MatChipSet {\r\n    constructor(elementRef, changeDetectorRef, dir, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, \r\n    /**\r\n     * Form control bound to the component.\r\n     * Implemented as part of `MatFormFieldControl`.\r\n     * @docs-private\r\n     */\r\n    ngControl) {\r\n        super(elementRef, changeDetectorRef, dir);\r\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\r\n        this._parentForm = _parentForm;\r\n        this._parentFormGroup = _parentFormGroup;\r\n        this.ngControl = ngControl;\r\n        /**\r\n         * Emits whenever the component state changes and should cause the parent\r\n         * form-field to update. Implemented as part of `MatFormFieldControl`.\r\n         * @docs-private\r\n         */\r\n        this.stateChanges = new Subject();\r\n    }\r\n}\r\nconst _MatChipGridMixinBase = mixinErrorState(MatChipGridBase);\r\n/**\r\n * An extension of the MatChipSet component used with MatChipRow chips and\r\n * the matChipInputFor directive.\r\n */\r\nclass MatChipGrid extends _MatChipGridMixinBase {\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get disabled() {\r\n        return this.ngControl ? !!this.ngControl.disabled : this._disabled;\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n        this._syncChipsState();\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get id() {\r\n        return this._chipInput.id;\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get empty() {\r\n        return ((!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0));\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get placeholder() {\r\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\r\n    }\r\n    set placeholder(value) {\r\n        this._placeholder = value;\r\n        this.stateChanges.next();\r\n    }\r\n    /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\r\n    get focused() {\r\n        return this._chipInput.focused || this._hasFocusedChip();\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get required() {\r\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\r\n    }\r\n    set required(value) {\r\n        this._required = coerceBooleanProperty(value);\r\n        this.stateChanges.next();\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get shouldLabelFloat() {\r\n        return !this.empty || this.focused;\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    set value(value) {\r\n        this._value = value;\r\n    }\r\n    /** Combined stream of all of the child chips' blur events. */\r\n    get chipBlurChanges() {\r\n        return this._getChipStream(chip => chip._onBlur);\r\n    }\r\n    constructor(elementRef, changeDetectorRef, dir, parentForm, parentFormGroup, defaultErrorStateMatcher, ngControl) {\r\n        super(elementRef, changeDetectorRef, dir, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\r\n        /**\r\n         * Implemented as part of MatFormFieldControl.\r\n         * @docs-private\r\n         */\r\n        this.controlType = 'mat-chip-grid';\r\n        this._defaultRole = 'grid';\r\n        /**\r\n         * List of element ids to propagate to the chipInput's aria-describedby attribute.\r\n         */\r\n        this._ariaDescribedbyIds = [];\r\n        /**\r\n         * Function when touched. Set as part of ControlValueAccessor implementation.\r\n         * @docs-private\r\n         */\r\n        this._onTouched = () => { };\r\n        /**\r\n         * Function when changed. Set as part of ControlValueAccessor implementation.\r\n         * @docs-private\r\n         */\r\n        this._onChange = () => { };\r\n        this._value = [];\r\n        /** Emits when the chip grid value has been changed by the user. */\r\n        this.change = new EventEmitter();\r\n        /**\r\n         * Emits whenever the raw value of the chip-grid changes. This is here primarily\r\n         * to facilitate the two-way binding for the `value` input.\r\n         * @docs-private\r\n         */\r\n        this.valueChange = new EventEmitter();\r\n        if (this.ngControl) {\r\n            this.ngControl.valueAccessor = this;\r\n        }\r\n    }\r\n    ngAfterContentInit() {\r\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\r\n            this._blur();\r\n            this.stateChanges.next();\r\n        });\r\n        merge(this.chipFocusChanges, this._chips.changes)\r\n            .pipe(takeUntil(this._destroyed))\r\n            .subscribe(() => this.stateChanges.next());\r\n    }\r\n    ngAfterViewInit() {\r\n        super.ngAfterViewInit();\r\n        if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        if (this.ngControl) {\r\n            // We need to re-evaluate this on every change detection cycle, because there are some\r\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\r\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\r\n            this.updateErrorState();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        super.ngOnDestroy();\r\n        this.stateChanges.complete();\r\n    }\r\n    /** Associates an HTML input element with this chip grid. */\r\n    registerInput(inputElement) {\r\n        this._chipInput = inputElement;\r\n        this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    onContainerClick(event) {\r\n        if (!this.disabled && !this._originatesFromChip(event)) {\r\n            this.focus();\r\n        }\r\n    }\r\n    /**\r\n     * Focuses the first chip in this chip grid, or the associated input when there\r\n     * are no eligible chips.\r\n     */\r\n    focus() {\r\n        if (this.disabled || this._chipInput.focused) {\r\n            return;\r\n        }\r\n        if (!this._chips.length || this._chips.first.disabled) {\r\n            // Delay until the next tick, because this can cause a \"changed after checked\"\r\n            // error if the input does something on focus (e.g. opens an autocomplete).\r\n            Promise.resolve().then(() => this._chipInput.focus());\r\n        }\r\n        else if (this._chips.length) {\r\n            this._keyManager.setFirstItemActive();\r\n        }\r\n        this.stateChanges.next();\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    setDescribedByIds(ids) {\r\n        // We must keep this up to date to handle the case where ids are set\r\n        // before the chip input is registered.\r\n        this._ariaDescribedbyIds = ids;\r\n        this._chipInput?.setDescribedByIds(ids);\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    writeValue(value) {\r\n        // The user is responsible for creating the child chips, so we just store the value.\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    registerOnChange(fn) {\r\n        this._onChange = fn;\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    registerOnTouched(fn) {\r\n        this._onTouched = fn;\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n        this.stateChanges.next();\r\n    }\r\n    /** When blurred, mark the field as touched when focus moved outside the chip grid. */\r\n    _blur() {\r\n        if (!this.disabled) {\r\n            // Check whether the focus moved to chip input.\r\n            // If the focus is not moved to chip input, mark the field as touched. If the focus moved\r\n            // to chip input, do nothing.\r\n            // Timeout is needed to wait for the focus() event trigger on chip input.\r\n            setTimeout(() => {\r\n                if (!this.focused) {\r\n                    this._propagateChanges();\r\n                    this._markAsTouched();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\r\n     * user to tab out of it. This prevents the grid from capturing focus and redirecting\r\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\r\n     */\r\n    _allowFocusEscape() {\r\n        if (!this._chipInput.focused) {\r\n            super._allowFocusEscape();\r\n        }\r\n    }\r\n    /** Handles custom keyboard events. */\r\n    _handleKeydown(event) {\r\n        if (event.keyCode === TAB) {\r\n            if (this._chipInput.focused &&\r\n                hasModifierKey(event, 'shiftKey') &&\r\n                this._chips.length &&\r\n                !this._chips.last.disabled) {\r\n                event.preventDefault();\r\n                if (this._keyManager.activeItem) {\r\n                    this._keyManager.setActiveItem(this._keyManager.activeItem);\r\n                }\r\n                else {\r\n                    this._focusLastChip();\r\n                }\r\n            }\r\n            else {\r\n                // Use the super method here since it doesn't check for the input\r\n                // focused state. This allows focus to escape if there's only one\r\n                // disabled chip left in the list.\r\n                super._allowFocusEscape();\r\n            }\r\n        }\r\n        else if (!this._chipInput.focused) {\r\n            super._handleKeydown(event);\r\n        }\r\n        this.stateChanges.next();\r\n    }\r\n    _focusLastChip() {\r\n        if (this._chips.length) {\r\n            this._chips.last.focus();\r\n        }\r\n    }\r\n    /** Emits change event to set the model value. */\r\n    _propagateChanges() {\r\n        const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\r\n        this._value = valueToEmit;\r\n        this.change.emit(new MatChipGridChange(this, valueToEmit));\r\n        this.valueChange.emit(valueToEmit);\r\n        this._onChange(valueToEmit);\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /** Mark the field as touched */\r\n    _markAsTouched() {\r\n        this._onTouched();\r\n        this._changeDetectorRef.markForCheck();\r\n        this.stateChanges.next();\r\n    }\r\n}\r\nMatChipGrid.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipGrid, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }, { token: i2$1.NgForm, optional: true }, { token: i2$1.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: i2$1.NgControl, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Component });\r\nMatChipGrid.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatChipGrid, selector: \"mat-chip-grid\", inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", placeholder: \"placeholder\", required: \"required\", value: \"value\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\" }, properties: { \"attr.role\": \"role\", \"tabIndex\": \"_chips && _chips.length === 0 ? -1 : tabIndex\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-invalid\": \"errorState\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], queries: [{ propertyName: \"_chips\", predicate: MatChipRow, descendants: true }], usesInheritance: true, ngImport: i0, template: `\r\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `, isInline: true, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipGrid, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'mat-chip-grid', template: `\r\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `, inputs: ['tabIndex'], host: {\r\n                        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\r\n                        '[attr.role]': 'role',\r\n                        '[tabIndex]': '_chips && _chips.length === 0 ? -1 : tabIndex',\r\n                        '[attr.aria-disabled]': 'disabled.toString()',\r\n                        '[attr.aria-invalid]': 'errorState',\r\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\r\n                        '[class.mat-mdc-chip-list-invalid]': 'errorState',\r\n                        '[class.mat-mdc-chip-list-required]': 'required',\r\n                        '(focus)': 'focus()',\r\n                        '(blur)': '_blur()',\r\n                    }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: i2$1.NgForm, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: i2$1.FormGroupDirective, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: i3.ErrorStateMatcher }, { type: i2$1.NgControl, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Self\r\n                }] }]; }, propDecorators: { disabled: [{\r\n                type: Input\r\n            }], placeholder: [{\r\n                type: Input\r\n            }], required: [{\r\n                type: Input\r\n            }], value: [{\r\n                type: Input\r\n            }], errorStateMatcher: [{\r\n                type: Input\r\n            }], change: [{\r\n                type: Output\r\n            }], valueChange: [{\r\n                type: Output\r\n            }], _chips: [{\r\n                type: ContentChildren,\r\n                args: [MatChipRow, {\r\n                        // We need to use `descendants: true`, because Ivy will no longer match\r\n                        // indirect descendants if it's left as false.\r\n                        descendants: true,\r\n                    }]\r\n            }] } });\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// Increasing integer for generating unique ids.\r\nlet nextUniqueId = 0;\r\n/**\r\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\r\n * May be placed inside or outside of a `<mat-chip-grid>`.\r\n */\r\nclass MatChipInput {\r\n    /** Register input for chip list */\r\n    set chipGrid(value) {\r\n        if (value) {\r\n            this._chipGrid = value;\r\n            this._chipGrid.registerInput(this);\r\n        }\r\n    }\r\n    /**\r\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\r\n     */\r\n    get addOnBlur() {\r\n        return this._addOnBlur;\r\n    }\r\n    set addOnBlur(value) {\r\n        this._addOnBlur = coerceBooleanProperty(value);\r\n    }\r\n    /** Whether the input is disabled. */\r\n    get disabled() {\r\n        return this._disabled || (this._chipGrid && this._chipGrid.disabled);\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n    }\r\n    /** Whether the input is empty. */\r\n    get empty() {\r\n        return !this.inputElement.value;\r\n    }\r\n    constructor(_elementRef, _defaultOptions, formField) {\r\n        this._elementRef = _elementRef;\r\n        this._defaultOptions = _defaultOptions;\r\n        /** Whether the control is focused. */\r\n        this.focused = false;\r\n        this._addOnBlur = false;\r\n        /**\r\n         * The list of key codes that will trigger a chipEnd event.\r\n         *\r\n         * Defaults to `[ENTER]`.\r\n         */\r\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\r\n        /** Emitted when a chip is to be added. */\r\n        this.chipEnd = new EventEmitter();\r\n        /** The input's placeholder text. */\r\n        this.placeholder = '';\r\n        /** Unique id for the input. */\r\n        this.id = `mat-mdc-chip-list-input-${nextUniqueId++}`;\r\n        this._disabled = false;\r\n        this.inputElement = this._elementRef.nativeElement;\r\n        if (formField) {\r\n            this.inputElement.classList.add('mat-mdc-form-field-input-control');\r\n        }\r\n    }\r\n    ngOnChanges() {\r\n        this._chipGrid.stateChanges.next();\r\n    }\r\n    ngOnDestroy() {\r\n        this.chipEnd.complete();\r\n    }\r\n    ngAfterContentInit() {\r\n        this._focusLastChipOnBackspace = this.empty;\r\n    }\r\n    /** Utility method to make host definition/tests more clear. */\r\n    _keydown(event) {\r\n        if (event) {\r\n            // To prevent the user from accidentally deleting chips when pressing BACKSPACE continuously,\r\n            // We focus the last chip on backspace only after the user has released the backspace button,\r\n            // And the input is empty (see behaviour in _keyup)\r\n            if (event.keyCode === BACKSPACE && this._focusLastChipOnBackspace) {\r\n                this._chipGrid._focusLastChip();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            else {\r\n                this._focusLastChipOnBackspace = false;\r\n            }\r\n        }\r\n        this._emitChipEnd(event);\r\n    }\r\n    /**\r\n     * Pass events to the keyboard manager. Available here for tests.\r\n     */\r\n    _keyup(event) {\r\n        // Allow user to move focus to chips next time he presses backspace\r\n        if (!this._focusLastChipOnBackspace && event.keyCode === BACKSPACE && this.empty) {\r\n            this._focusLastChipOnBackspace = true;\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    /** Checks to see if the blur should emit the (chipEnd) event. */\r\n    _blur() {\r\n        if (this.addOnBlur) {\r\n            this._emitChipEnd();\r\n        }\r\n        this.focused = false;\r\n        // Blur the chip list if it is not focused\r\n        if (!this._chipGrid.focused) {\r\n            this._chipGrid._blur();\r\n        }\r\n        this._chipGrid.stateChanges.next();\r\n    }\r\n    _focus() {\r\n        this.focused = true;\r\n        this._focusLastChipOnBackspace = this.empty;\r\n        this._chipGrid.stateChanges.next();\r\n    }\r\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\r\n    _emitChipEnd(event) {\r\n        if (!event || this._isSeparatorKey(event)) {\r\n            this.chipEnd.emit({\r\n                input: this.inputElement,\r\n                value: this.inputElement.value,\r\n                chipInput: this,\r\n            });\r\n            event?.preventDefault();\r\n        }\r\n    }\r\n    _onInput() {\r\n        // Let chip list know whenever the value changes.\r\n        this._chipGrid.stateChanges.next();\r\n    }\r\n    /** Focuses the input. */\r\n    focus() {\r\n        this.inputElement.focus();\r\n    }\r\n    /** Clears the input */\r\n    clear() {\r\n        this.inputElement.value = '';\r\n        this._focusLastChipOnBackspace = true;\r\n    }\r\n    setDescribedByIds(ids) {\r\n        const element = this._elementRef.nativeElement;\r\n        // Set the value directly in the DOM since this binding\r\n        // is prone to \"changed after checked\" errors.\r\n        if (ids.length) {\r\n            element.setAttribute('aria-describedby', ids.join(' '));\r\n        }\r\n        else {\r\n            element.removeAttribute('aria-describedby');\r\n        }\r\n    }\r\n    /** Checks whether a keycode is one of the configured separators. */\r\n    _isSeparatorKey(event) {\r\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\r\n    }\r\n}\r\nMatChipInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipInput, deps: [{ token: i0.ElementRef }, { token: MAT_CHIPS_DEFAULT_OPTIONS }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\r\nMatChipInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatChipInput, selector: \"input[matChipInputFor]\", inputs: { chipGrid: [\"matChipInputFor\", \"chipGrid\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, host: { listeners: { \"keydown\": \"_keydown($event)\", \"keyup\": \"_keyup($event)\", \"blur\": \"_blur()\", \"focus\": \"_focus()\", \"input\": \"_onInput()\" }, properties: { \"id\": \"id\", \"attr.disabled\": \"disabled || null\", \"attr.placeholder\": \"placeholder || null\", \"attr.aria-invalid\": \"_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null\", \"attr.aria-required\": \"_chipGrid && _chipGrid.required || null\", \"attr.required\": \"_chipGrid && _chipGrid.required || null\" }, classAttribute: \"mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipInput, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'input[matChipInputFor]',\r\n                    exportAs: 'matChipInput, matChipInputFor',\r\n                    host: {\r\n                        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\r\n                        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\r\n                        // the MDC chips were landed initially with it.\r\n                        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\r\n                        '(keydown)': '_keydown($event)',\r\n                        '(keyup)': '_keyup($event)',\r\n                        '(blur)': '_blur()',\r\n                        '(focus)': '_focus()',\r\n                        '(input)': '_onInput()',\r\n                        '[id]': 'id',\r\n                        '[attr.disabled]': 'disabled || null',\r\n                        '[attr.placeholder]': 'placeholder || null',\r\n                        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\r\n                        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\r\n                        '[attr.required]': '_chipGrid && _chipGrid.required || null',\r\n                    },\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [MAT_CHIPS_DEFAULT_OPTIONS]\r\n                }] }, { type: i1$2.MatFormField, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [MAT_FORM_FIELD]\r\n                }] }]; }, propDecorators: { chipGrid: [{\r\n                type: Input,\r\n                args: ['matChipInputFor']\r\n            }], addOnBlur: [{\r\n                type: Input,\r\n                args: ['matChipInputAddOnBlur']\r\n            }], separatorKeyCodes: [{\r\n                type: Input,\r\n                args: ['matChipInputSeparatorKeyCodes']\r\n            }], chipEnd: [{\r\n                type: Output,\r\n                args: ['matChipInputTokenEnd']\r\n            }], placeholder: [{\r\n                type: Input\r\n            }], id: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input\r\n            }] } });\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst CHIP_DECLARATIONS = [\r\n    MatChip,\r\n    MatChipAvatar,\r\n    MatChipEditInput,\r\n    MatChipGrid,\r\n    MatChipInput,\r\n    MatChipListbox,\r\n    MatChipOption,\r\n    MatChipRemove,\r\n    MatChipRow,\r\n    MatChipSet,\r\n    MatChipTrailingIcon,\r\n];\r\nclass MatChipsModule {\r\n}\r\nMatChipsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nMatChipsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipsModule, declarations: [MatChipAction, MatChip,\r\n        MatChipAvatar,\r\n        MatChipEditInput,\r\n        MatChipGrid,\r\n        MatChipInput,\r\n        MatChipListbox,\r\n        MatChipOption,\r\n        MatChipRemove,\r\n        MatChipRow,\r\n        MatChipSet,\r\n        MatChipTrailingIcon], imports: [MatCommonModule, CommonModule, MatRippleModule], exports: [MatCommonModule, MatChip,\r\n        MatChipAvatar,\r\n        MatChipEditInput,\r\n        MatChipGrid,\r\n        MatChipInput,\r\n        MatChipListbox,\r\n        MatChipOption,\r\n        MatChipRemove,\r\n        MatChipRow,\r\n        MatChipSet,\r\n        MatChipTrailingIcon] });\r\nMatChipsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipsModule, providers: [\r\n        ErrorStateMatcher,\r\n        {\r\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\r\n            useValue: {\r\n                separatorKeyCodes: [ENTER],\r\n            },\r\n        },\r\n    ], imports: [MatCommonModule, CommonModule, MatRippleModule, MatCommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatChipsModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [MatCommonModule, CommonModule, MatRippleModule],\r\n                    exports: [MatCommonModule, CHIP_DECLARATIONS],\r\n                    declarations: [MatChipAction, CHIP_DECLARATIONS],\r\n                    providers: [\r\n                        ErrorStateMatcher,\r\n                        {\r\n                            provide: MAT_CHIPS_DEFAULT_OPTIONS,\r\n                            useValue: {\r\n                                separatorKeyCodes: [ENTER],\r\n                            },\r\n                        },\r\n                    ],\r\n                }]\r\n        }] });\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };\r\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}