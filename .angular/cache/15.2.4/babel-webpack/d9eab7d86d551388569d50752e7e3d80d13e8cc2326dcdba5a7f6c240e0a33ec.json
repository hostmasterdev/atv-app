{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { merge, of as observableOf } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/paginator\";\nimport * as i4 from \"@angular/material/progress-spinner\";\nimport * as i5 from \"@angular/material/sort\";\nimport * as i6 from \"@angular/material/table\";\nfunction AppComponent_div_5_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\nfunction AppComponent_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" GitHub's API rate limit has been reached. It will be reset in one minute. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, AppComponent_div_5_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 17);\n    i0.ɵɵtemplate(2, AppComponent_div_5_div_2_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isLoadingResults);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isRateLimitReached);\n  }\n}\nfunction AppComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 20);\n    i0.ɵɵtext(1, \"#\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r13.number);\n  }\n}\nfunction AppComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 20);\n    i0.ɵɵtext(1, \"Title\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r14.title);\n  }\n}\nfunction AppComponent_th_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 20);\n    i0.ɵɵtext(1, \"State\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r15.state);\n  }\n}\nfunction AppComponent_th_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 22);\n    i0.ɵɵtext(1, \" Created \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, row_r16.created_at));\n  }\n}\nfunction AppComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 23);\n  }\n}\nfunction AppComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 24);\n  }\n}\n/**\n * @title Table retrieving data through HTTP\n */\nexport class AppComponent {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    this.displayedColumns = ['created', 'state', 'number', 'title'];\n    this.apiData = [];\n    this.resultsLength = 0;\n    this.isLoadingResults = true;\n    this.isRateLimitReached = false;\n  }\n  jsonParse(apiData) {\n    const dataArray = apiData[\"data\"];\n    let entityArray = [];\n    for (let index in dataArray) {\n      const obj = dataArray[index];\n      if (!!obj[\"AuditMetaData\"] && obj[\"AuditMetaData\"][\"EntityName\"] === \"User\") {\n        if (obj[\"TypeOfChange\"] === \"UPDATE\" || obj[\"TypeOfChange\"] === \"ADD\") {\n          const auditObj = {\n            \"UpdatedBy\": obj[\"EntityPayload\"][\"UpdatedBy\"] || null,\n            \"UpdatedTimestamp\": obj[\"EntityPayload\"][\"UpdatedTimestamp\"] || null,\n            \"EntityName\": obj[\"AuditMetaData\"][\"EntityName\"] || null,\n            \"UserID\": obj[\"BussinessKeyPayload\"][\"UserId\"] || null,\n            \"TypeOfChange\": obj[\"TypeOfChange\"] || null,\n            \"PrimaryOrgId\": obj[\"EntityPayload\"][\"PrimaryOrgId\"] || null,\n            \"PasswordExpiry\": obj[\"EntityPayload\"][\"PasswordExpiry\"] || null,\n            \"Password\": obj[\"EntityPayload\"][\"Password\"] || null\n          };\n          if (obj[\"TypeOfChange\"] === \"UPDATE\") {\n            auditObj[\"OldValues\"] = obj[\"EntityPayload\"][\"OldValues\"] || null;\n          }\n          entityArray.push(auditObj);\n        }\n      }\n    }\n    return entityArray;\n  }\n  ngAfterViewInit() {\n    this.exampleDatabase = new ExampleHttpDatabase(this._httpClient);\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n    merge(this.sort.sortChange, this.paginator.page).pipe(startWith({}), switchMap(() => {\n      this.isLoadingResults = true;\n      return this.exampleDatabase.getRepoIssues(this.sort.active, this.sort.direction, this.paginator.pageIndex).pipe(catchError(() => observableOf(null)));\n    }), map(apiData => {\n      // Flip flag to show that loading has finished.\n      this.isLoadingResults = false;\n      this.isRateLimitReached = apiData === null;\n      if (apiData === null) {\n        return [];\n      }\n      // Only refresh the result length if there is new data. In case of rate\n      // limit errors, we do not want to reset the paginator to zero, as that\n      // would prevent users from re-triggering requests.\n      const dataArray = this.jsonParse(apiData);\n      this.resultsLength = 60;\n      return dataArray;\n    })).subscribe(data => this.apiData = data);\n  }\n}\n/** An example database that the data source uses to retrieve data for the table. */\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatPaginator, 5);\n      i0.ɵɵviewQuery(MatSort, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n    }\n  },\n  decls: 23,\n  vars: 6,\n  consts: [[\"role\", \"banner\", 1, \"header\"], [\"width\", \"200\", \"alt\", \"Manhattan Associates Logo\", \"src\", \"assets/MAlogo.png\"], [1, \"example-container\", \"mat-elevation-z8\"], [\"class\", \"example-loading-shade\", 4, \"ngIf\"], [1, \"example-table-container\"], [\"mat-table\", \"\", \"matSort\", \"\", \"matSortActive\", \"created\", \"matSortDisableClear\", \"\", \"matSortDirection\", \"desc\", 1, \"example-table\", 3, \"dataSource\"], [\"matColumnDef\", \"number\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"title\"], [\"matColumnDef\", \"state\"], [\"matColumnDef\", \"created\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"disableClear\", \"\", 4, \"matHeaderCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"aria-label\", \"Select page of GitHub search results\", 3, \"length\", \"pageSize\"], [1, \"example-loading-shade\"], [4, \"ngIf\"], [\"class\", \"example-rate-limit-reached\", 4, \"ngIf\"], [1, \"example-rate-limit-reached\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"disableClear\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"img\", 1);\n      i0.ɵɵelementStart(2, \"span\");\n      i0.ɵɵtext(3, \"AUDIT TRAIL VIEWER Darshan\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵtemplate(5, AppComponent_div_5_Template, 3, 2, \"div\", 3);\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"table\", 5);\n      i0.ɵɵelementContainerStart(8, 6);\n      i0.ɵɵtemplate(9, AppComponent_th_9_Template, 2, 0, \"th\", 7);\n      i0.ɵɵtemplate(10, AppComponent_td_10_Template, 2, 1, \"td\", 8);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(11, 9);\n      i0.ɵɵtemplate(12, AppComponent_th_12_Template, 2, 0, \"th\", 7);\n      i0.ɵɵtemplate(13, AppComponent_td_13_Template, 2, 1, \"td\", 8);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(14, 10);\n      i0.ɵɵtemplate(15, AppComponent_th_15_Template, 2, 0, \"th\", 7);\n      i0.ɵɵtemplate(16, AppComponent_td_16_Template, 2, 1, \"td\", 8);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(17, 11);\n      i0.ɵɵtemplate(18, AppComponent_th_18_Template, 2, 0, \"th\", 12);\n      i0.ɵɵtemplate(19, AppComponent_td_19_Template, 3, 3, \"td\", 8);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(20, AppComponent_tr_20_Template, 1, 0, \"tr\", 13);\n      i0.ɵɵtemplate(21, AppComponent_tr_21_Template, 1, 0, \"tr\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(22, \"mat-paginator\", 15);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoadingResults || ctx.isRateLimitReached);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"dataSource\", ctx.data);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"length\", ctx.resultsLength)(\"pageSize\", 30);\n    }\n  },\n  dependencies: [i2.NgIf, i3.MatPaginator, i4.MatProgressSpinner, i5.MatSort, i5.MatSortHeader, i6.MatTable, i6.MatHeaderCellDef, i6.MatHeaderRowDef, i6.MatColumnDef, i6.MatCellDef, i6.MatRowDef, i6.MatHeaderCell, i6.MatCell, i6.MatHeaderRow, i6.MatRow, i2.DatePipe],\n  styles: [\"[_nghost-%COMP%] {\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n  font-size: 14px;\\n  color: #333;\\n  box-sizing: border-box;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\nh1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%] {\\n  margin: 8px 0;\\n}\\n\\np[_ngcontent-%COMP%] {\\n  margin: 0;\\n}\\n\\n.spacer[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  height: 60px;\\n  display: flex;\\n  align-items: center;\\n  background-color: #1976d2;\\n  color: white;\\n  font-weight: 600;\\n  text-align: center;\\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\\n}\\n\\n.header[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  margin: 0 16px;\\n}\\n\\n\\n.example-container[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n\\n.example-table-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  min-height: 200px;\\n  max-height: 400px;\\n  overflow: auto;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.example-loading-shade[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 56px;\\n  right: 0;\\n  background: rgba(0, 0, 0, 0.15);\\n  z-index: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.example-rate-limit-reached[_ngcontent-%COMP%] {\\n  max-width: 360px;\\n  text-align: center;\\n}\\n\\n\\n.mat-column-number[_ngcontent-%COMP%], .mat-column-state[_ngcontent-%COMP%] {\\n  max-width: 64px;\\n}\\n\\n.mat-column-created[_ngcontent-%COMP%] {\\n  max-width: 124px;\\n}\\n\\n\\n.example-container[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n\\n.example-table-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  min-height: 200px;\\n  max-height: 400px;\\n  overflow: auto;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.example-loading-shade[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 56px;\\n  right: 0;\\n  background: rgba(0, 0, 0, 0.15);\\n  z-index: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.example-rate-limit-reached[_ngcontent-%COMP%] {\\n  max-width: 360px;\\n  text-align: center;\\n}\\n\\n\\n.mat-column-number[_ngcontent-%COMP%], .mat-column-state[_ngcontent-%COMP%] {\\n  max-width: 64px;\\n}\\n\\n.mat-column-created[_ngcontent-%COMP%] {\\n  max-width: 124px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksMEpBQUE7RUFDQSxlQUFBO0VBQ0EsV0FBQTtFQUNBLHNCQUFBO0VBQ0EsbUNBQUE7RUFDQSxrQ0FBQTtBQUNKOztBQUVFOzs7Ozs7RUFNRSxhQUFBO0FBQ0o7O0FBRUU7RUFDRSxTQUFBO0FBQ0o7O0FBRUU7RUFDRSxPQUFBO0FBQ0o7O0FBRUU7RUFDRSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsK0ZBQUE7QUFDSjs7QUFFRTtFQUNFLGNBQUE7QUFDSjs7QUFFQSxjQUFBO0FBQ0E7RUFDSSxrQkFBQTtBQUNKOztBQUVFO0VBQ0Usa0JBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUVFO0VBQ0UsV0FBQTtBQUNKOztBQUVFO0VBQ0Usa0JBQUE7RUFDQSxNQUFBO0VBQ0EsT0FBQTtFQUNBLFlBQUE7RUFDQSxRQUFBO0VBQ0EsK0JBQUE7RUFDQSxVQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUFDSjs7QUFFRTtFQUNFLGdCQUFBO0VBQ0Esa0JBQUE7QUFDSjs7QUFFRSxrQkFBQTtBQUNBOztFQUVFLGVBQUE7QUFDSjs7QUFFRTtFQUNFLGdCQUFBO0FBQ0o7O0FBRUUsY0FBQTtBQUNGO0VBQ0ksa0JBQUE7QUFDSjs7QUFFRTtFQUNFLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7QUFDSjs7QUFFRTtFQUNFLFdBQUE7QUFDSjs7QUFFRTtFQUNFLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxZQUFBO0VBQ0EsUUFBQTtFQUNBLCtCQUFBO0VBQ0EsVUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0FBQ0o7O0FBRUU7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBRUUsa0JBQUE7QUFDQTs7RUFFRSxlQUFBO0FBQ0o7O0FBRUU7RUFDRSxnQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICAgIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiU2Vnb2UgVUlcIiwgUm9ib3RvLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmLCBcIkFwcGxlIENvbG9yIEVtb2ppXCIsIFwiU2Vnb2UgVUkgRW1vamlcIiwgXCJTZWdvZSBVSSBTeW1ib2xcIjtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgY29sb3I6ICMzMzM7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICB9XG5cbiAgaDEsXG4gIGgyLFxuICBoMyxcbiAgaDQsXG4gIGg1LFxuICBoNiB7XG4gICAgbWFyZ2luOiA4cHggMDtcbiAgfVxuXG4gIHAge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuXG4gIC5zcGFjZXIge1xuICAgIGZsZXg6IDE7XG4gIH1cblxuICAuaGVhZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgaGVpZ2h0OiA2MHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTk3NmQyO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBib3gtc2hhZG93OiByZ2JhKDUwLCA1MCwgOTMsIDAuMjUpIDBweCA1MHB4IDEwMHB4IC0yMHB4LCByZ2JhKDAsIDAsIDAsIDAuMykgMHB4IDMwcHggNjBweCAtMzBweDtcbiAgfVxuXG4gIC5oZWFkZXIgaW1nIHtcbiAgICBtYXJnaW46IDAgMTZweDtcbiAgfVxuXG4vKiBTdHJ1Y3R1cmUgKi9cbi5leGFtcGxlLWNvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gIFxuICAuZXhhbXBsZS10YWJsZS1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtaW4taGVpZ2h0OiAyMDBweDtcbiAgICBtYXgtaGVpZ2h0OiA0MDBweDtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgfVxuICBcbiAgdGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuZXhhbXBsZS1sb2FkaW5nLXNoYWRlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgYm90dG9tOiA1NnB4O1xuICAgIHJpZ2h0OiAwO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgei1pbmRleDogMTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIH1cbiAgXG4gIC5leGFtcGxlLXJhdGUtbGltaXQtcmVhY2hlZCB7XG4gICAgbWF4LXdpZHRoOiAzNjBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgXG4gIC8qIENvbHVtbiBXaWR0aHMgKi9cbiAgLm1hdC1jb2x1bW4tbnVtYmVyLFxuICAubWF0LWNvbHVtbi1zdGF0ZSB7XG4gICAgbWF4LXdpZHRoOiA2NHB4O1xuICB9XG4gIFxuICAubWF0LWNvbHVtbi1jcmVhdGVkIHtcbiAgICBtYXgtd2lkdGg6IDEyNHB4O1xuICB9XG5cbiAgLyogU3RydWN0dXJlICovXG4uZXhhbXBsZS1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICBcbiAgLmV4YW1wbGUtdGFibGUtY29udGFpbmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWluLWhlaWdodDogMjAwcHg7XG4gICAgbWF4LWhlaWdodDogNDAwcHg7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gIH1cbiAgXG4gIHRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgLmV4YW1wbGUtbG9hZGluZy1zaGFkZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogNTZweDtcbiAgICByaWdodDogMDtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgIHotaW5kZXg6IDE7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG4gIFxuICAuZXhhbXBsZS1yYXRlLWxpbWl0LXJlYWNoZWQge1xuICAgIG1heC13aWR0aDogMzYwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG4gIFxuICAvKiBDb2x1bW4gV2lkdGhzICovXG4gIC5tYXQtY29sdW1uLW51bWJlcixcbiAgLm1hdC1jb2x1bW4tc3RhdGUge1xuICAgIG1heC13aWR0aDogNjRweDtcbiAgfVxuICBcbiAgLm1hdC1jb2x1bW4tY3JlYXRlZCB7XG4gICAgbWF4LXdpZHRoOiAxMjRweDtcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport class ExampleHttpDatabase {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n  }\n  getRepoIssues(sort, order, page) {\n    // const href = 'https://api.github.com/search/issues';\n    // const requestUrl = `${href}?q=repo:angular/components&sort=${sort}&order=${order}&page=${\n    //   page + 1\n    // }`;\n    const requestUrl = \"https://run.mocky.io/v3/0d105fe2-0e98-47a6-af35-161b5972035f\";\n    console.log(requestUrl);\n    return this._httpClient.get(requestUrl);\n  }\n}","map":{"version":3,"mappings":"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","names":["MatPaginator","MatSort","merge","of","observableOf","catchError","map","startWith","switchMap","i0","AppComponent","constructor","_httpClient","jsonParse","apiData","dataArray","entityArray","index","obj","auditObj","push","ngAfterViewInit","exampleDatabase","ExampleHttpDatabase","sort","sortChange","subscribe","paginator","pageIndex","page","pipe","isLoadingResults","getRepoIssues","active","direction","isRateLimitReached","resultsLength","data","selectors","viewQuery","order","requestUrl","console","log","get"],"sourceRoot":"","sources":["/Users/Darshan/Documents/GitHub/atv-app/src/app/app.component.ts","/Users/Darshan/Documents/GitHub/atv-app/src/app/app.component.html"],"sourcesContent":["import {HttpClient} from '@angular/common/http';\nimport {Component, ViewChild, AfterViewInit} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort, SortDirection} from '@angular/material/sort';\nimport {merge, Observable, of as observableOf} from 'rxjs';\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\n\n/**\n * @title Table retrieving data through HTTP\n */\n@Component({\n  selector: 'app-root',\n  styleUrls: ['app.component.scss'],\n  templateUrl: 'app.component.html',\n})\nexport class AppComponent implements AfterViewInit {\n  displayedColumns: string[] = ['created', 'state', 'number', 'title'];\n  /**MAY NEED TO REMOVE ! FROM LINE BELOW: https://stackoverflow.com/questions/49699067/property-has-no-initializer-and-is-not-definitely-assigned-in-the-construc */\n  exampleDatabase: ExampleHttpDatabase | null;\n  apiData: GithubIssue[] = [];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private _httpClient: HttpClient) {}\n\n  private jsonParse(apiData: GithubApi): Array<GithubIssue> {\n    const dataArray = apiData[\"data\"]\n    let entityArray = []\n    \n     for (let index in dataArray) {\n        const obj = dataArray[index]\n\n        if (!!obj[\"AuditMetaData\"] && obj[\"AuditMetaData\"][\"EntityName\"] === \"User\") {\n            if (obj[\"TypeOfChange\"] === \"UPDATE\" || obj[\"TypeOfChange\"] === \"ADD\") {\n\n                const auditObj = {\n                    \"UpdatedBy\": obj[\"EntityPayload\"][\"UpdatedBy\"] || null,\n                    \"UpdatedTimestamp\": obj[\"EntityPayload\"][\"UpdatedTimestamp\"] || null,\n                    \"EntityName\": obj[\"AuditMetaData\"][\"EntityName\"] || null,\n                    \"UserID\": obj[\"BussinessKeyPayload\"][\"UserId\"] || null,\n                    \"TypeOfChange\": obj[\"TypeOfChange\"] || null,\n                    \"PrimaryOrgId\": obj[\"EntityPayload\"][\"PrimaryOrgId\"] || null,\n                    \"PasswordExpiry\": obj[\"EntityPayload\"][\"PasswordExpiry\"] || null,\n                    \"Password\": obj[\"EntityPayload\"][\"Password\"] || null\n                }\n                if (obj[\"TypeOfChange\"] === \"UPDATE\") {\n                    auditObj[\"OldValues\"] = obj[\"EntityPayload\"][\"OldValues\"] || null\n                }\n                entityArray.push(auditObj)\n            }\n        }\n\n    }\n    return entityArray\n  }\n\n  ngAfterViewInit() {\n    this.exampleDatabase = new ExampleHttpDatabase(this._httpClient);\n\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.exampleDatabase!.getRepoIssues(\n            this.sort.active,\n            this.sort.direction,\n            this.paginator.pageIndex,\n          ).pipe(catchError(() => observableOf(null)));\n        }),\n        map(apiData => {\n          // Flip flag to show that loading has finished.\n          this.isLoadingResults = false;\n          this.isRateLimitReached = apiData === null;\n\n          if (apiData === null) {\n            return [];\n          }\n\n          // Only refresh the result length if there is new data. In case of rate\n          // limit errors, we do not want to reset the paginator to zero, as that\n          // would prevent users from re-triggering requests.\n          const dataArray = this.jsonParse(apiData)\n          this.resultsLength = 60\n         \n          return dataArray;\n        }),\n      )\n      .subscribe(data => (this.apiData = data));\n  }\n}\n\nexport interface GithubApi {\n  data: GithubIssue[];\n}\n\nexport interface GithubIssue {\n  UpdatedBy: string;\n  UpdatedTimestamp: string;\n  EntityName: string;\n  UserID: string;\n  TypeOfChange: string;\n  PrimaryOrgId: string | null;\n  PasswordExpiry: string | null,\n  Password: string;\n  OldValues: Object;\n}\n\n/** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleHttpDatabase {\n  constructor(private _httpClient: HttpClient) {}\n\n  getRepoIssues(sort: string, order: SortDirection, page: number): Observable<GithubApi> {\n    // const href = 'https://api.github.com/search/issues';\n    // const requestUrl = `${href}?q=repo:angular/components&sort=${sort}&order=${order}&page=${\n    //   page + 1\n    // }`;\n    const requestUrl = \"https://run.mocky.io/v3/0d105fe2-0e98-47a6-af35-161b5972035f\"\n    console.log(requestUrl)\n\n    return this._httpClient.get<GithubApi>(requestUrl);\n  }\n}\n\n\n/**  Copyright 2023 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at https://angular.io/license */","<!--HEADER START-->\n<div class=\"header\" role=\"banner\">\n  <img\n    width=\"200\"\n    alt=\"Manhattan Associates Logo\"\n    src=\"assets/MAlogo.png\"\n  />\n  <span>AUDIT TRAIL VIEWER Darshan</span>\n</div>\n<!--HEADER END-->\n\n<!--TABLE START-->\n<div class=\"example-container mat-elevation-z8\">\n  <div class=\"example-loading-shade\"\n       *ngIf=\"isLoadingResults || isRateLimitReached\">\n    <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\n      GitHub's API rate limit has been reached. It will be reset in one minute.\n    </div>\n  </div>\n\n  <div class=\"example-table-container\">\n\n    <table mat-table [dataSource]=\"data\" class=\"example-table\"\n           matSort matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\">\n      <!-- Number Column -->\n      <ng-container matColumnDef=\"number\">\n        <th mat-header-cell *matHeaderCellDef>#</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.number}}</td>\n      </ng-container>\n\n      <!-- Title Column -->\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef>Title</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\n      </ng-container>\n\n      <!-- State Column -->\n      <ng-container matColumnDef=\"state\">\n        <th mat-header-cell *matHeaderCellDef>State</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.state}}</td>\n      </ng-container>\n\n      <!-- Created Column -->\n      <ng-container matColumnDef=\"created\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n          Created\n        </th>\n        <td mat-cell *matCellDef=\"let row\">{{row.created_at | date}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n\n  <mat-paginator [length]=\"resultsLength\" [pageSize]=\"30\" aria-label=\"Select page of GitHub search results\"></mat-paginator>\n</div>\n\n\n<!-- Copyright 2023 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at https://angular.io/license -->\n<!--TABLE END-->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}